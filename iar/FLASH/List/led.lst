###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       01/Aug/2018  12:09:48
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\led\led.c
#    Command line =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\led\led.c -D
#        LPLD_K60 -D USE_K60D10 -lCN
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -lB
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -o C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\camera\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\led\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\oled\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\task\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\uart\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\twinCore\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\mpu6050\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\nrf\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\calc\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\UI\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ledArray\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\CPU\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\driver\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\class\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List\led.lst
#    Object file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj\led.o
#
###############################################################################

C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\led\led.c
      1          #include "led.h"
      2          
      3          /****Discription**********************************************/
      4          
      5          /*
      6          	0.led驱动程序
      7          	1.需先调用oled.Init()函数再使用本驱动
      8          	2.Init函数有参数，为需要初始化的LED号，可用|进行连接，如LED1 | LED2
      9          	3.led.Set(int, int)函数可以设置led状态
     10          		第一个参数为LED号，格式与初始化类似
     11          		第二个参数为状态，从LED_ON和LED_OFF选择
     12          	4.引脚定义在头文件里面修改
     13          
     14          	@Time	2018-04-24
     15          	@Author	郭帆
     16          	@Usefor	led驱动
     17          */
     18          
     19          /****Functions************************************************/
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void LED_Init(int LEDNum)
     22          {
   \                     LED_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
     23          	static GPIO_InitTypeDef GPIO_InitStructure;
     24          
     25          	if (LEDNum & LED1)
   \   00000006   0x07E0             LSLS     R0,R4,#+31
   \   00000008   0xD515             BPL.N    ??LED_Init_0
     26          	{
     27          		GPIO_InitStructure.GPIO_PTx = LED1_PTx;
   \   0000000A   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff0c0
   \   0000000C   0x....             LDR.N    R1,??DataTable1_1
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     28          		GPIO_InitStructure.GPIO_Pins = LED1_Pinx;
   \   00000010   0xF44F 0x5000      MOV      R0,#+8192
   \   00000014   0x....             LDR.N    R1,??DataTable1_1
   \   00000016   0x6048             STR      R0,[R1, #+4]
     29          		GPIO_InitStructure.GPIO_Dir = DIR_OUTPUT;
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x....             LDR.N    R1,??DataTable1_1
   \   0000001C   0x7308             STRB     R0,[R1, #+12]
     30          		GPIO_InitStructure.GPIO_Output = OUTPUT_H;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x....             LDR.N    R1,??DataTable1_1
   \   00000022   0x7348             STRB     R0,[R1, #+13]
     31          		LPLD_GPIO_Init(GPIO_InitStructure);
   \   00000024   0x....             LDR.N    R1,??DataTable1_1
   \   00000026   0xB084             SUB      SP,SP,#+16
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x2214             MOVS     R2,#+20
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000030   0xBC0F             POP      {R0-R3}
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Init
     32          	}
     33          
     34          	if (LEDNum & LED2)
   \                     ??LED_Init_0: (+1)
   \   00000036   0x07A0             LSLS     R0,R4,#+30
   \   00000038   0xD515             BPL.N    ??LED_Init_1
     35          	{
     36          		GPIO_InitStructure.GPIO_PTx = LED2_PTx;
   \   0000003A   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff0c0
   \   0000003C   0x....             LDR.N    R1,??DataTable1_1
   \   0000003E   0x6008             STR      R0,[R1, #+0]
     37          		GPIO_InitStructure.GPIO_Pins = LED2_Pinx;
   \   00000040   0xF44F 0x4080      MOV      R0,#+16384
   \   00000044   0x....             LDR.N    R1,??DataTable1_1
   \   00000046   0x6048             STR      R0,[R1, #+4]
     38          		GPIO_InitStructure.GPIO_Dir = DIR_OUTPUT;
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x....             LDR.N    R1,??DataTable1_1
   \   0000004C   0x7308             STRB     R0,[R1, #+12]
     39          		GPIO_InitStructure.GPIO_Output = OUTPUT_H;
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x....             LDR.N    R1,??DataTable1_1
   \   00000052   0x7348             STRB     R0,[R1, #+13]
     40          		LPLD_GPIO_Init(GPIO_InitStructure);
   \   00000054   0x....             LDR.N    R1,??DataTable1_1
   \   00000056   0xB084             SUB      SP,SP,#+16
   \   00000058   0x4668             MOV      R0,SP
   \   0000005A   0x2214             MOVS     R2,#+20
   \   0000005C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000060   0xBC0F             POP      {R0-R3}
   \   00000062   0x.... 0x....      BL       LPLD_GPIO_Init
     41          	}
     42          
     43          	if (LEDNum & LED3)
   \                     ??LED_Init_1: (+1)
   \   00000066   0x0760             LSLS     R0,R4,#+29
   \   00000068   0xD515             BPL.N    ??LED_Init_2
     44          	{
     45          		GPIO_InitStructure.GPIO_PTx = LED3_PTx;
   \   0000006A   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff0c0
   \   0000006C   0x....             LDR.N    R1,??DataTable1_1
   \   0000006E   0x6008             STR      R0,[R1, #+0]
     46          		GPIO_InitStructure.GPIO_Pins = LED3_Pinx;
   \   00000070   0xF44F 0x4000      MOV      R0,#+32768
   \   00000074   0x....             LDR.N    R1,??DataTable1_1
   \   00000076   0x6048             STR      R0,[R1, #+4]
     47          		GPIO_InitStructure.GPIO_Dir = DIR_OUTPUT;
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0x....             LDR.N    R1,??DataTable1_1
   \   0000007C   0x7308             STRB     R0,[R1, #+12]
     48          		GPIO_InitStructure.GPIO_Output = OUTPUT_H;
   \   0000007E   0x2001             MOVS     R0,#+1
   \   00000080   0x....             LDR.N    R1,??DataTable1_1
   \   00000082   0x7348             STRB     R0,[R1, #+13]
     49          		LPLD_GPIO_Init(GPIO_InitStructure);
   \   00000084   0x....             LDR.N    R1,??DataTable1_1
   \   00000086   0xB084             SUB      SP,SP,#+16
   \   00000088   0x4668             MOV      R0,SP
   \   0000008A   0x2214             MOVS     R2,#+20
   \   0000008C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000090   0xBC0F             POP      {R0-R3}
   \   00000092   0x.... 0x....      BL       LPLD_GPIO_Init
     50          	}
     51          
     52          	if (LEDNum & LED4)
   \                     ??LED_Init_2: (+1)
   \   00000096   0x0720             LSLS     R0,R4,#+28
   \   00000098   0xD515             BPL.N    ??LED_Init_3
     53          	{
     54          		GPIO_InitStructure.GPIO_PTx = LED4_PTx;
   \   0000009A   0x....             LDR.N    R0,??DataTable1_2  ;; 0x400ff000
   \   0000009C   0x....             LDR.N    R1,??DataTable1_1
   \   0000009E   0x6008             STR      R0,[R1, #+0]
     55          		GPIO_InitStructure.GPIO_Pins = LED4_Pinx;
   \   000000A0   0xF45F 0x2000      MOVS     R0,#+524288
   \   000000A4   0x....             LDR.N    R1,??DataTable1_1
   \   000000A6   0x6048             STR      R0,[R1, #+4]
     56          		GPIO_InitStructure.GPIO_Dir = DIR_OUTPUT;
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x....             LDR.N    R1,??DataTable1_1
   \   000000AC   0x7308             STRB     R0,[R1, #+12]
     57          		GPIO_InitStructure.GPIO_Output = OUTPUT_H;
   \   000000AE   0x2001             MOVS     R0,#+1
   \   000000B0   0x....             LDR.N    R1,??DataTable1_1
   \   000000B2   0x7348             STRB     R0,[R1, #+13]
     58          		LPLD_GPIO_Init(GPIO_InitStructure);
   \   000000B4   0x....             LDR.N    R1,??DataTable1_1
   \   000000B6   0xB084             SUB      SP,SP,#+16
   \   000000B8   0x4668             MOV      R0,SP
   \   000000BA   0x2214             MOVS     R2,#+20
   \   000000BC   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000C0   0xBC0F             POP      {R0-R3}
   \   000000C2   0x.... 0x....      BL       LPLD_GPIO_Init
     59          	}
     60          }
   \                     ??LED_Init_3: (+1)
   \   000000C6   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??GPIO_InitStructure:
   \   00000000                      DS8 20
     61          

   \                                 In section .text, align 2, keep-with-next
     62          void LED_Set(int LEDNum, int state)
     63          {
     64          	if (LEDNum & LED1)
   \                     LED_Set: (+1)
   \   00000000   0x07C2             LSLS     R2,R0,#+31
   \   00000002   0xD511             BPL.N    ??LED_Set_0
     65          	{
     66          		switch (state)
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD002             BEQ.N    ??LED_Set_1
   \   00000008   0x2902             CMP      R1,#+2
   \   0000000A   0xD003             BEQ.N    ??LED_Set_2
   \   0000000C   0xD20C             BCS.N    ??LED_Set_0
     67          		{
     68          		case ON:
     69          		case OFF:
     70          			LED1_O = state;
   \                     ??LED_Set_1: (+1)
   \   0000000E   0x....             LDR.N    R2,??DataTable1_3  ;; 0x43fe1834
   \   00000010   0x6011             STR      R1,[R2, #+0]
     71          			break;
   \   00000012   0xE009             B.N      ??LED_Set_0
     72          		case TOGGLE:
     73          			LED1_Toggle();
   \                     ??LED_Set_2: (+1)
   \   00000014   0x....             LDR.N    R2,??DataTable1_3  ;; 0x43fe1834
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0x2A00             CMP      R2,#+0
   \   0000001A   0xD101             BNE.N    ??LED_Set_3
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0xE000             B.N      ??LED_Set_4
   \                     ??LED_Set_3: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \                     ??LED_Set_4: (+1)
   \   00000022   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000024   0x....             LDR.N    R3,??DataTable1_3  ;; 0x43fe1834
   \   00000026   0x601A             STR      R2,[R3, #+0]
     74          			break;
     75          		}
     76          	}
     77          
     78          	if (LEDNum & LED2)
   \                     ??LED_Set_0: (+1)
   \   00000028   0x0782             LSLS     R2,R0,#+30
   \   0000002A   0xD511             BPL.N    ??LED_Set_5
     79          	{
     80          		switch (state)
   \   0000002C   0x2900             CMP      R1,#+0
   \   0000002E   0xD002             BEQ.N    ??LED_Set_6
   \   00000030   0x2902             CMP      R1,#+2
   \   00000032   0xD003             BEQ.N    ??LED_Set_7
   \   00000034   0xD20C             BCS.N    ??LED_Set_5
     81          		{
     82          		case ON:
     83          		case OFF:
     84          			LED2_O = state;
   \                     ??LED_Set_6: (+1)
   \   00000036   0x....             LDR.N    R2,??DataTable1_4  ;; 0x43fe1838
   \   00000038   0x6011             STR      R1,[R2, #+0]
     85          			break;
   \   0000003A   0xE009             B.N      ??LED_Set_5
     86          		case TOGGLE:
     87          			LED2_Toggle();
   \                     ??LED_Set_7: (+1)
   \   0000003C   0x....             LDR.N    R2,??DataTable1_4  ;; 0x43fe1838
   \   0000003E   0x6812             LDR      R2,[R2, #+0]
   \   00000040   0x2A00             CMP      R2,#+0
   \   00000042   0xD101             BNE.N    ??LED_Set_8
   \   00000044   0x2201             MOVS     R2,#+1
   \   00000046   0xE000             B.N      ??LED_Set_9
   \                     ??LED_Set_8: (+1)
   \   00000048   0x2200             MOVS     R2,#+0
   \                     ??LED_Set_9: (+1)
   \   0000004A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000004C   0x....             LDR.N    R3,??DataTable1_4  ;; 0x43fe1838
   \   0000004E   0x601A             STR      R2,[R3, #+0]
     88          			break;
     89          		}
     90          	}
     91          
     92          	if (LEDNum & LED3)
   \                     ??LED_Set_5: (+1)
   \   00000050   0x0742             LSLS     R2,R0,#+29
   \   00000052   0xD511             BPL.N    ??LED_Set_10
     93          	{
     94          		switch (state)
   \   00000054   0x2900             CMP      R1,#+0
   \   00000056   0xD002             BEQ.N    ??LED_Set_11
   \   00000058   0x2902             CMP      R1,#+2
   \   0000005A   0xD003             BEQ.N    ??LED_Set_12
   \   0000005C   0xD20C             BCS.N    ??LED_Set_10
     95          		{
     96          		case ON:
     97          		case OFF:
     98          			LED3_O = state;
   \                     ??LED_Set_11: (+1)
   \   0000005E   0x....             LDR.N    R2,??DataTable1_5  ;; 0x43fe183c
   \   00000060   0x6011             STR      R1,[R2, #+0]
     99          			break;
   \   00000062   0xE009             B.N      ??LED_Set_10
    100          		case TOGGLE:
    101          			LED3_Toggle();
   \                     ??LED_Set_12: (+1)
   \   00000064   0x....             LDR.N    R2,??DataTable1_5  ;; 0x43fe183c
   \   00000066   0x6812             LDR      R2,[R2, #+0]
   \   00000068   0x2A00             CMP      R2,#+0
   \   0000006A   0xD101             BNE.N    ??LED_Set_13
   \   0000006C   0x2201             MOVS     R2,#+1
   \   0000006E   0xE000             B.N      ??LED_Set_14
   \                     ??LED_Set_13: (+1)
   \   00000070   0x2200             MOVS     R2,#+0
   \                     ??LED_Set_14: (+1)
   \   00000072   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000074   0x....             LDR.N    R3,??DataTable1_5  ;; 0x43fe183c
   \   00000076   0x601A             STR      R2,[R3, #+0]
    102          			break;
    103          		}
    104          	}
    105          
    106          	if (LEDNum & LED4)
   \                     ??LED_Set_10: (+1)
   \   00000078   0x0700             LSLS     R0,R0,#+28
   \   0000007A   0xD511             BPL.N    ??LED_Set_15
    107          	{
    108          		switch (state)
   \   0000007C   0x2900             CMP      R1,#+0
   \   0000007E   0xD002             BEQ.N    ??LED_Set_16
   \   00000080   0x2902             CMP      R1,#+2
   \   00000082   0xD003             BEQ.N    ??LED_Set_17
   \   00000084   0xD20C             BCS.N    ??LED_Set_15
    109          		{
    110          		case ON:
    111          		case OFF:
    112          			LED4_O = state;
   \                     ??LED_Set_16: (+1)
   \   00000086   0x....             LDR.N    R0,??DataTable1_6  ;; 0x43fe004c
   \   00000088   0x6001             STR      R1,[R0, #+0]
    113          			break;
   \   0000008A   0xE009             B.N      ??LED_Set_15
    114          		case TOGGLE:
    115          			LED4_Toggle();
   \                     ??LED_Set_17: (+1)
   \   0000008C   0x....             LDR.N    R0,??DataTable1_6  ;; 0x43fe004c
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD101             BNE.N    ??LED_Set_18
   \   00000094   0x2001             MOVS     R0,#+1
   \   00000096   0xE000             B.N      ??LED_Set_19
   \                     ??LED_Set_18: (+1)
   \   00000098   0x2000             MOVS     R0,#+0
   \                     ??LED_Set_19: (+1)
   \   0000009A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009C   0x....             LDR.N    R1,??DataTable1_6  ;; 0x43fe004c
   \   0000009E   0x6008             STR      R0,[R1, #+0]
    116          			break;
    117          		}
    118          	}
    119          }
   \                     ??LED_Set_15: (+1)
   \   000000A0   0x4770             BX       LR               ;; return
    120          
    121          /****Objects**************************************************/
    122          

   \                                 In section .data, align 4
    123          LED_CLASS led = {&LED_Init, &LED_Set};
   \                     led:
   \   00000000   0x........         DC32 LED_Init, LED_Set
   \              0x........   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     ??GPIO_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x43FE1834         DC32     0x43fe1834

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x43FE1838         DC32     0x43fe1838

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x43FE183C         DC32     0x43fe183c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x43FE004C         DC32     0x43fe004c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   LED_Init
        16   -> LPLD_GPIO_Init
        32   -> __aeabi_memcpy4
       0   LED_Set


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
      20  GPIO_InitStructure
     200  LED_Init
     162  LED_Set
       8  led

 
  20 bytes in section .bss
   8 bytes in section .data
 390 bytes in section .text
 
 390 bytes of CODE memory
  28 bytes of DATA memory

Errors: none
Warnings: none
