###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       04/Aug/2018  19:58:27
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\oled\oled.c
#    Command line =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\oled\oled.c
#        -D LPLD_K60 -D USE_K60D10 -lCN
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -lB
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -o C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\camera\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\led\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\oled\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\task\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\uart\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\twinCore\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\mpu6050\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\nrf\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\calc\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\UI\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ledArray\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\CPU\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\driver\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\class\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List\oled.lst
#    Object file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj\oled.o
#
###############################################################################

C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\oled\oled.c
      1          #include "oled.h"
      2          
      3          /****Discription**********************************************/
      4          
      5          /*
      6          	0.oled驱动程序
      7          	1.需先调用oled.Init()函数再使用本驱动
      8          	2.oled.Printf(int, int, char *)函数可以在屏幕上打印字符串
      9          	3.oled.PrintXXXXValue(int, int, data)函数可以在屏幕上打印相应的数值
     10          		具体XXXX的写法参照h文件
     11          	4.字库可以往后面加
     12          
     13          	@Time	2018-04-24
     14          	@Author	郭帆
     15          	@Usefor	oled驱动
     16          */
     17          
     18          /****Variables************************************************/
     19          

   \                                 In section .rodata, align 4
     20          const unsigned char F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 2, 4, 8, 16, 32, 0, 0, 65, 65, 127
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x00    
   \              0x41 0x41    
   \              0x7F         
   \   00000173   0x00 0x00          DC8 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0, 0, 32
   \              0x04 0x02    
   \              0x01 0x02    
   \              0x04 0x00    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x00 0x01    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x20         
   \   00000188   0x54 0x54          DC8 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68, 32, 0
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44 0x20    
   \              0x00         
   \   00000199   0x38 0x44          DC8 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1, 2, 0
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \              0x02 0x00    
   \   000001AB   0x18 0xA4          DC8 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125, 64, 0
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D 0x40    
   \              0x00         
   \   000001BC   0x00 0x40          DC8 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65, 127, 64
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41 0x7F    
   \              0x40         
   \   000001CD   0x00 0x00          DC8 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68, 68, 68
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \              0x44 0x44    
   \   000001DF   0x38 0x00          DC8 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124, 8, 4, 4
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \   000001F1   0x08 0x00          DC8 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64, 64, 32
   \              0x48 0x54    
   \              0x54 0x54    
   \              0x20 0x00    
   \              0x04 0x3F    
   \              0x44 0x40    
   \              0x20 0x00    
   \              0x3C 0x40    
   \              0x40 0x20    
   \   00000203   0x7C 0x00          DC8 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68, 40, 16
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44 0x28    
   \              0x10         
   \   00000214   0x28 0x44          DC8 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68, 8, 8, 73
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \              0x08 0x08    
   \              0x49         
   \   00000225   0x2A 0x14          DC8 42, 20, 8
   \              0x08         
     21          {
     22          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     23          	{ 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     24          	{ 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     25          	{ 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     26          	{ 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     27          	{ 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     28          	{ 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     29          	{ 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     30          	{ 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     31          	{ 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     32          	{ 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     33          	{ 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     34          	{ 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     35          	{ 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     36          	{ 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     37          	{ 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     38          	{ 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     39          	{ 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     40          	{ 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
     41          	{ 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
     42          	{ 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
     43          	{ 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
     44          	{ 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
     45          	{ 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
     46          	{ 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
     47          	{ 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
     48          	{ 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
     49          	{ 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
     50          	{ 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
     51          	{ 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
     52          	{ 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
     53          	{ 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
     54          	{ 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
     55          	{ 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
     56          	{ 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
     57          	{ 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
     58          	{ 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
     59          	{ 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
     60          	{ 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
     61          	{ 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
     62          	{ 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
     63          	{ 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
     64          	{ 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
     65          	{ 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
     66          	{ 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
     67          	{ 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
     68          	{ 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
     69          	{ 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
     70          	{ 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
     71          	{ 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
     72          	{ 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
     73          	{ 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
     74          	{ 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
     75          	{ 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
     76          	{ 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
     77          	{ 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
     78          	{ 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
     79          	{ 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
     80          	{ 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
     81          	{ 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
     82          	{ 0x00, 0x02, 0x04 ,0x08, 0x10, 0x20 },   // '\'
     83          	{ 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
     84          	{ 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
     85          	{ 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
     86          	{ 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
     87          	{ 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
     88          	{ 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
     89          	{ 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
     90          	{ 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
     91          	{ 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
     92          	{ 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
     93          	{ 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
     94          	{ 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
     95          	{ 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
     96          	{ 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
     97          	{ 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
     98          	{ 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
     99          	{ 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    100          	{ 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    101          	{ 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    102          	{ 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    103          	{ 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    104          	{ 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    105          	{ 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    106          	{ 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    107          	{ 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    108          	{ 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    109          	{ 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    110          	{ 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    111          	{ 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    112          	{ 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    113          	{ 0x08, 0x08, 0x49, 0x2A, 0x14, 0x08 }    // cursor
    114          };
    115          
    116          /****Function list********************************************/
    117          
    118          void OLED_WriteData(unsigned char data);
    119          void OLED_WriteCmd(unsigned char cmd);
    120          void OLED_SetPosition(unsigned char x, unsigned char y);
    121          void OLED_Fill(unsigned char bmp_data);
    122          void OLED_DelayMs(unsigned int ms);
    123          
    124          void SetStartColumn(unsigned char column);
    125          void SetAddressingMode(unsigned char mode);
    126          void SetColumnAddress(unsigned char begin, unsigned char end);
    127          void SetPageAddress(unsigned char begin, unsigned char end);
    128          void SetStartLine(unsigned char line);
    129          void SetContrastControl(unsigned char contrast);
    130          void SetChargePump(unsigned char cmd);
    131          void SetSegmentRemap(unsigned char cmd);
    132          void SetEntireDisplay(unsigned char cmd);
    133          void SetInverseDisplay(unsigned char cmd);
    134          void SetMultiplexRatio(unsigned char cmd);
    135          void SetDisplay_On_Off(unsigned char cmd);
    136          void SetStartPage(unsigned char address);
    137          void SetCommonRemap(unsigned char dir);
    138          void SetDisplayOffset(unsigned char cmd);
    139          void SetDisplayClock(unsigned char cmd);
    140          void SetPrechargePeriod(unsigned char cmd);
    141          void SetCommonConfig(unsigned char cmd);
    142          void SetVCOMH(unsigned char cmd);
    143          void SetNOP(void);
    144          void OLED_Init(void);
    145          void OLED_GPIO_Config(void);
    146          
    147          void OLED_Put6x8Char(unsigned char x, unsigned char y, unsigned char ch);
    148          void OLED_Put6x8Str(unsigned char x, unsigned char y, unsigned char ch[]);
    149          void OLED_PrintCharValue(unsigned char x, unsigned char y, unsigned char data);
    150          void OLED_PrintIntValue(unsigned char x, unsigned char y, int data);
    151          void OLED_PrintUintValue(unsigned char x, unsigned char y, unsigned int data);
    152          void OLED_PrintFloatValue(unsigned char x, unsigned char y, float data);
    153          void OLED_DisplayImgCalc(void);
    154          void OLED_DisplayImg(void);
    155          void OLED_Put16x16CH(unsigned char x, unsigned char y, unsigned char num);
    156          void OLED_DispACat(unsigned char x, unsigned char y);
    157          void OLED_DispAImg(void);
    158          void OLED_DispMyScene(void);
    159          
    160          /****Objects**************************************************/
    161          

   \                                 In section .data, align 4
    162          OLED_CLASS oled =
   \                     oled:
   \   00000000   0x........         DC32 OLED_Init, OLED_Put6x8Char, OLED_Put6x8Str, OLED_PrintCharValue
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000010   0x........         DC32 OLED_PrintIntValue, OLED_PrintUintValue, OLED_PrintFloatValue
   \              0x........   
   \              0x........   
   \   0000001C   0x........         DC32 OLED_DisplayImgCalc, OLED_DisplayImg, OLED_Put16x16CH
   \              0x........   
   \              0x........   
   \   00000028   0x........         DC32 OLED_DispACat, OLED_DispAImg, OLED_DispMyScene
   \              0x........   
   \              0x........   
    163          {
    164          	&OLED_Init,
    165          	&OLED_Put6x8Char,
    166          	&OLED_Put6x8Str,
    167          	&OLED_PrintCharValue,
    168          	&OLED_PrintIntValue,
    169          	&OLED_PrintUintValue,
    170          	&OLED_PrintFloatValue,
    171          	&OLED_DisplayImgCalc,
    172          	&OLED_DisplayImg,
    173          	&OLED_Put16x16CH,
    174          	&OLED_DispACat,
    175          	&OLED_DispAImg,
    176          	&OLED_DispMyScene
    177          };
    178          
    179          /****Functions************************************************/
    180          

   \                                 In section .text, align 4, keep-with-next
    181          void OLED_WriteData(unsigned char data)
    182          {
   \                     OLED_WriteData: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    183          	unsigned char i = 8;
   \   00000004   0x2508             MOVS     R5,#+8
    184          
    185          	OLED_DC(1);
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2103             MOVS     R1,#+3
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    186          	OLED_SCLK(0);
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x2102             MOVS     R1,#+2
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE013             B.N      ??OLED_WriteData_0
    187          
    188          	while(i--)
    189          	{
    190          		if(data & 0x80)
    191          			OLED_SDA(1);
    192          		else
    193          			OLED_SDA(0);
   \                     ??OLED_WriteData_1: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Output_b
    194          
    195          		OLED_SCLK(1);
   \                     ??OLED_WriteData_2: (+1)
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2102             MOVS     R1,#+2
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
    196          		asm("nop");
   \   00000038   0xBF00             nop
    197          		OLED_SCLK(0);
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    198          
    199          		data <<= 1;
   \   00000046   0x0064             LSLS     R4,R4,#+1
   \                     ??OLED_WriteData_0: (+1)
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x1E45             SUBS     R5,R0,#+1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD008             BEQ.N    ??OLED_WriteData_3
   \   00000052   0x0620             LSLS     R0,R4,#+24
   \   00000054   0xD5E4             BPL.N    ??OLED_WriteData_1
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0xE7E3             B.N      ??OLED_WriteData_2
    200          	}
    201          }
   \                     ??OLED_WriteData_3: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    202          

   \                                 In section .text, align 4, keep-with-next
    203          void OLED_WriteCmd(unsigned char cmd)
    204          {
   \                     OLED_WriteCmd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    205          	unsigned char i = 8;
   \   00000004   0x2508             MOVS     R5,#+8
    206          
    207          	OLED_DC(0);
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2103             MOVS     R1,#+3
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    208          	OLED_SCLK(0);
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x2102             MOVS     R1,#+2
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE013             B.N      ??OLED_WriteCmd_0
    209          
    210          	while(i--)
    211          	{
    212          		if(cmd & 0x80)
    213          			OLED_SDA(1);
    214          		else
    215          			OLED_SDA(0);
   \                     ??OLED_WriteCmd_1: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Output_b
    216          
    217          		OLED_SCLK(1);
   \                     ??OLED_WriteCmd_2: (+1)
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2102             MOVS     R1,#+2
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
    218          		asm("nop");
   \   00000038   0xBF00             nop
    219          		OLED_SCLK(0);
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    220          
    221          		cmd <<= 1;
   \   00000046   0x0064             LSLS     R4,R4,#+1
   \                     ??OLED_WriteCmd_0: (+1)
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x1E45             SUBS     R5,R0,#+1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD008             BEQ.N    ??OLED_WriteCmd_3
   \   00000052   0x0620             LSLS     R0,R4,#+24
   \   00000054   0xD5E4             BPL.N    ??OLED_WriteCmd_1
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0xE7E3             B.N      ??OLED_WriteCmd_2
    222          	}
    223          }
   \                     ??OLED_WriteCmd_3: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    224          

   \                                 In section .text, align 2, keep-with-next
    225          void OLED_SetPosition(unsigned char x, unsigned char y)
    226          {
   \                     OLED_SetPosition: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    227          	OLED_WriteCmd(0xB0 + y);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       OLED_WriteCmd
    228          	OLED_WriteCmd(((x & 0xF0) >> 4) | 0x10);
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x0900             LSRS     R0,R0,#+4
   \   00000014   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       OLED_WriteCmd
    229          	OLED_WriteCmd((x & 0x0F) | 0x00);
   \   0000001E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000022   0x.... 0x....      BL       OLED_WriteCmd
    230          }
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
    231          

   \                                 In section .text, align 2, keep-with-next
    232          void OLED_Fill(unsigned char bmp_data)
    233          {
   \                     OLED_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    234          	unsigned char x, y;
    235          
    236          	for(y = 0 ; y < 8 ; y++)
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0xE008             B.N      ??OLED_Fill_0
    237          	{
    238          		OLED_WriteCmd(0xB0 + y);	// 0xb0 + 0~7 means page 0~7
    239          		OLED_WriteCmd(0x00);	// 0x00 + 0~16 means 128 pixs / 16
    240          		OLED_WriteCmd(0x10);	// 0x10 + 0~16 means 128 pixs / 16 groups
    241          
    242          		for(x = 0 ; x < 128 ; x++)
    243          			OLED_WriteData(bmp_data);
   \                     ??OLED_Fill_1: (+1)
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       OLED_WriteData
   \   00000010   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_Fill_2: (+1)
   \   00000012   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000014   0x2D80             CMP      R5,#+128
   \   00000016   0xDBF7             BLT.N    ??OLED_Fill_1
   \   00000018   0x1C76             ADDS     R6,R6,#+1
   \                     ??OLED_Fill_0: (+1)
   \   0000001A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001C   0x2E08             CMP      R6,#+8
   \   0000001E   0xDA0C             BGE.N    ??OLED_Fill_3
   \   00000020   0xF1B6 0x0050      SUBS     R0,R6,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       OLED_WriteCmd
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       OLED_WriteCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       OLED_WriteCmd
   \   00000036   0x2500             MOVS     R5,#+0
   \   00000038   0xE7EB             B.N      ??OLED_Fill_2
    244          	}
    245          }
   \                     ??OLED_Fill_3: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
    246          

   \                                 In section .text, align 2, keep-with-next
    247          void OLED_DelayMs(unsigned int ms)
    248          {
    249          	uint16 i;
    250          	while(ms--)
   \                     OLED_DelayMs: (+1)
   \                     ??OLED_DelayMs_0: (+1)
   \   00000000   0x0001             MOVS     R1,R0
   \   00000002   0x1E48             SUBS     R0,R1,#+1
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD007             BEQ.N    ??OLED_DelayMs_1
    251          	{
    252          		i = 6675;
   \   00000008   0xF641 0x2113      MOVW     R1,#+6675
    253          		while(i--);
   \                     ??OLED_DelayMs_2: (+1)
   \   0000000C   0x000A             MOVS     R2,R1
   \   0000000E   0x1E51             SUBS     R1,R2,#+1
   \   00000010   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000012   0x2A00             CMP      R2,#+0
   \   00000014   0xD1FA             BNE.N    ??OLED_DelayMs_2
   \   00000016   0xE7F3             B.N      ??OLED_DelayMs_0
    254          	}
    255          }
   \                     ??OLED_DelayMs_1: (+1)
   \   00000018   0x4770             BX       LR               ;; return
    256          

   \                                 In section .text, align 2, keep-with-next
    257          void SetStartColumn(unsigned char column)
    258          {
   \                     SetStartColumn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    259          	OLED_WriteCmd(0x00 + column % 16);	// Set Lower Column Start Address for Page Addressing Mode
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2010             MOVS     R0,#+16
   \   00000008   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000000C   0xFB01 0x4110      MLS      R1,R1,R0,R4
   \   00000010   0x0008             MOVS     R0,R1
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       OLED_WriteCmd
    260          										// Default => 0x00
    261          	OLED_WriteCmd(0x10 + column / 16);	// Set Higher Column Start Address for Page Addressing Mode
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2010             MOVS     R0,#+16
   \   0000001C   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000020   0x3010             ADDS     R0,R0,#+16
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x.... 0x....      BL       OLED_WriteCmd
    262          										// Default => 0x10
    263          }
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
    264          

   \                                 In section .text, align 2, keep-with-next
    265          void SetAddressingMode(unsigned char mode)
    266          {
   \                     SetAddressingMode: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    267          	OLED_WriteCmd(0x20);	// Set Memory Addressing Mode
   \   00000004   0x2020             MOVS     R0,#+32
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    268          	OLED_WriteCmd(mode);	// Default => 0x02
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_WriteCmd
    269          							// 0x00 => Horizontal Addressing Mode
    270          							// 0x01 => Vertical Addressing Mode
    271          							// 0x02 => Page Addressing Mode
    272          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    273          

   \                                 In section .text, align 2, keep-with-next
    274          void SetColumnAddress(unsigned char begin, unsigned char end)
    275          {
   \                     SetColumnAddress: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    276          	OLED_WriteCmd(0x21);	// Set Column Address
   \   00000006   0x2021             MOVS     R0,#+33
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    277          	OLED_WriteCmd(begin);	// Default => 0x00 (Column Begin Address)
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       OLED_WriteCmd
    278          	OLED_WriteCmd(end);		// Default => 0x7F (Column End Address)
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OLED_WriteCmd
    279          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    280          

   \                                 In section .text, align 2, keep-with-next
    281          void SetPageAddress(unsigned char begin, unsigned char end)
    282          {
   \                     SetPageAddress: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    283          	OLED_WriteCmd(0x22);	// Set Page Address
   \   00000006   0x2022             MOVS     R0,#+34
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    284          	OLED_WriteCmd(begin);	// Default => 0x00 (Page Begin Address)
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       OLED_WriteCmd
    285          	OLED_WriteCmd(end);		// Default => 0x7F (Page End Address)
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OLED_WriteCmd
    286          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    287          

   \                                 In section .text, align 2, keep-with-next
    288          void SetStartLine(unsigned char line)
    289          {
   \                     SetStartLine: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    290          	OLED_WriteCmd(0x40 | line);	// Set Display Start Line
   \   00000002   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    291          								// Default => 0x40 (0x00)
    292          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    293          

   \                                 In section .text, align 2, keep-with-next
    294          void SetContrastControl(unsigned char contrast)
    295          {
   \                     SetContrastControl: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    296          	OLED_WriteCmd(0x81);		// Set Contrast Control
   \   00000004   0x2081             MOVS     R0,#+129
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    297          	OLED_WriteCmd(contrast);	// Default => 0x7F
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_WriteCmd
    298          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    299          

   \                                 In section .text, align 2, keep-with-next
    300          void SetChargePump(unsigned char cmd)
    301          {
   \                     SetChargePump: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    302          	OLED_WriteCmd(0x8D);		// Set Charge Pump
   \   00000004   0x208D             MOVS     R0,#+141
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    303          	OLED_WriteCmd(0x10 | cmd);	// Default => 0x10
   \   0000000A   0xF054 0x0010      ORRS     R0,R4,#0x10
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       OLED_WriteCmd
    304          								// 0x10 (0x00) => Disable Charge Pump
    305          								// 0x14 (0x04) => Enable Charge Pump
    306          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    307          

   \                                 In section .text, align 2, keep-with-next
    308          void SetSegmentRemap(unsigned char cmd)
    309          {
   \                     SetSegmentRemap: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    310          	OLED_WriteCmd(0xA0 | cmd);	// Set Segment Re-Map
   \   00000002   0xF050 0x00A0      ORRS     R0,R0,#0xA0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    311          								// Default => 0xA0
    312          								// 0xA0 (0x00) => Column Address 0 Mapped to SEG0
    313          								// 0xA1 (0x01) => Column Address 0 Mapped to SEG127
    314          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    315          

   \                                 In section .text, align 2, keep-with-next
    316          void SetEntireDisplay(unsigned char cmd)
    317          {
   \                     SetEntireDisplay: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    318          	OLED_WriteCmd(0xA4 | cmd);	// Set Entire Display On / Off
   \   00000002   0xF050 0x00A4      ORRS     R0,R0,#0xA4
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    319          								// Default => 0xA4
    320          								// 0xA4 (0x00) => Normal Display
    321          								// 0xA5 (0x01) => Entire Display On
    322          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    323          

   \                                 In section .text, align 2, keep-with-next
    324          void SetInverseDisplay(unsigned char cmd)
    325          {
   \                     SetInverseDisplay: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    326          	OLED_WriteCmd(0xA6 | cmd);	// Set Inverse Display On/Off
   \   00000002   0xF050 0x00A6      ORRS     R0,R0,#0xA6
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    327          								// Default => 0xA6
    328          								// 0xA6 (0x00) => Normal Display
    329          								// 0xA7 (0x01) => Inverse Display On
    330          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    331          

   \                                 In section .text, align 2, keep-with-next
    332          void SetMultiplexRatio(unsigned char cmd)
    333          {
   \                     SetMultiplexRatio: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    334          	OLED_WriteCmd(0xA8);	// Set Multiplex Ratio
   \   00000004   0x20A8             MOVS     R0,#+168
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    335          	OLED_WriteCmd(cmd);		// Default => 0x3F (1/64 Duty)
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_WriteCmd
    336          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    337          

   \                                 In section .text, align 2, keep-with-next
    338          void SetDisplay_On_Off(unsigned char cmd)
    339          {
   \                     SetDisplay_On_Off: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    340          	OLED_WriteCmd(0xAE | cmd);	// Set Display On/Off
   \   00000002   0xF050 0x00AE      ORRS     R0,R0,#0xAE
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    341          								// Default => 0xAE
    342          								// 0xAE (0x00) => Display Off
    343          								// 0xAF (0x01) => Display On
    344          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    345          

   \                                 In section .text, align 2, keep-with-next
    346          void SetStartPage(unsigned char address)
    347          {
   \                     SetStartPage: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    348          	OLED_WriteCmd(0xB0 | address);	// Set Page Start Address for Page Addressing Mode
   \   00000002   0xF050 0x00B0      ORRS     R0,R0,#0xB0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    349          									// Default => 0xB0 (0x00)
    350          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    351          

   \                                 In section .text, align 2, keep-with-next
    352          void SetCommonRemap(unsigned char dir)
    353          {
   \                     SetCommonRemap: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    354          	OLED_WriteCmd(0xC0 | dir);	// Set COM Output Scan Direction
   \   00000002   0xF050 0x00C0      ORRS     R0,R0,#0xC0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       OLED_WriteCmd
    355          								// Default => 0xC0
    356          								// 0xC0 (0x00) => Scan from COM0 to 63
    357          								// 0xC8 (0x08) => Scan from COM63 to 0
    358          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    359          

   \                                 In section .text, align 2, keep-with-next
    360          void SetDisplayOffset(unsigned char cmd)
    361          {
   \                     SetDisplayOffset: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    362          	OLED_WriteCmd(0xD3);	// Set Display Offset
   \   00000004   0x20D3             MOVS     R0,#+211
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    363          	OLED_WriteCmd(cmd);		// Default => 0x00
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_WriteCmd
    364          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    365          

   \                                 In section .text, align 2, keep-with-next
    366          void SetDisplayClock(unsigned char cmd)
    367          {
   \                     SetDisplayClock: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    368          	OLED_WriteCmd(0xD5);	// Set Display Clock Divide Ratio / Oscillator Frequency
   \   00000004   0x20D5             MOVS     R0,#+213
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    369          	OLED_WriteCmd(cmd);		// Default => 0x80
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_WriteCmd
    370          							// D[3:0] => Display Clock Divider
    371          							// D[7:4] => Oscillator Frequency
    372          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    373          

   \                                 In section .text, align 2, keep-with-next
    374          void SetPrechargePeriod(unsigned char cmd)
    375          {
   \                     SetPrechargePeriod: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    376          	OLED_WriteCmd(0xD9);	// Set Pre-Charge Period
   \   00000004   0x20D9             MOVS     R0,#+217
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    377          	OLED_WriteCmd(cmd);		// Default => 0x22 (2 Display Clocks [Phase 2] / 2 Display Clocks [Phase 1])
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_WriteCmd
    378          							// D[3:0] => Phase 1 Period in 1~15 Display Clocks
    379          							// D[7:4] => Phase 2 Period in 1~15 Display Clocks
    380          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    381          

   \                                 In section .text, align 2, keep-with-next
    382          void SetCommonConfig(unsigned char cmd)
    383          {
   \                     SetCommonConfig: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    384          	OLED_WriteCmd(0xDA);		// Set COM Pins Hardware Configuration
   \   00000004   0x20DA             MOVS     R0,#+218
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    385          	OLED_WriteCmd(0x02 | cmd);	// Default => 0x12 (0x10)
   \   0000000A   0xF054 0x0002      ORRS     R0,R4,#0x2
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       OLED_WriteCmd
    386          								// Alternative COM Pin Configuration
    387          								// Disable COM Left/Right Re-Map
    388          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    389          

   \                                 In section .text, align 2, keep-with-next
    390          void SetVCOMH(unsigned char cmd)
    391          {
   \                     SetVCOMH: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    392          	OLED_WriteCmd(0xDB);	// Set VCOMH Deselect Level
   \   00000004   0x20DB             MOVS     R0,#+219
   \   00000006   0x.... 0x....      BL       OLED_WriteCmd
    393          	OLED_WriteCmd(cmd);		// Default => 0x20 (0.77*VCC)
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_WriteCmd
    394          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    395          

   \                                 In section .text, align 2, keep-with-next
    396          void SetNOP(void)
    397          {
   \                     SetNOP: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    398          	OLED_WriteCmd(0xE3);	// Command for No Operation
   \   00000002   0x20E3             MOVS     R0,#+227
   \   00000004   0x.... 0x....      BL       OLED_WriteCmd
    399          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    400          

   \                                 In section .text, align 2, keep-with-next
    401          void OLED_Init(void)
    402          {
   \                     OLED_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    403          	OLED_GPIO_Config();
   \   00000002   0x.... 0x....      BL       OLED_GPIO_Config
    404          
    405          	OLED_DC(0);
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2103             MOVS     R1,#+3
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    406          	OLED_SDA(0);
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
    407          	OLED_SCLK(0);
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x2102             MOVS     R1,#+2
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000026   0x.... 0x....      BL       LPLD_GPIO_Output_b
    408          	OLED_RST(0);
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Output_b
    409          	OLED_DelayMs(50);
   \   00000036   0x2032             MOVS     R0,#+50
   \   00000038   0x.... 0x....      BL       OLED_DelayMs
    410          	OLED_SCLK(1);
   \   0000003C   0x2201             MOVS     R2,#+1
   \   0000003E   0x2102             MOVS     R1,#+2
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000044   0x.... 0x....      BL       LPLD_GPIO_Output_b
    411          	OLED_RST(0);
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000050   0x.... 0x....      BL       LPLD_GPIO_Output_b
    412          	OLED_DelayMs(50);
   \   00000054   0x2032             MOVS     R0,#+50
   \   00000056   0x.... 0x....      BL       OLED_DelayMs
    413          	OLED_RST(1);
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000062   0x.... 0x....      BL       LPLD_GPIO_Output_b
    414          
    415          	SetDisplay_On_Off(0x00);	// Display Off (0x00/0x01)
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       SetDisplay_On_Off
    416          	SetDisplayClock(0x80);		// Set Clock as 100 Frames/Sec
   \   0000006C   0x2080             MOVS     R0,#+128
   \   0000006E   0x.... 0x....      BL       SetDisplayClock
    417          	SetMultiplexRatio(0x3F);	// 1/64 Duty (0x0F~0x3F)
   \   00000072   0x203F             MOVS     R0,#+63
   \   00000074   0x.... 0x....      BL       SetMultiplexRatio
    418          	SetDisplayOffset(0x00);		// Shift Mapping RAM Counter (0x00~0x3F)
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      BL       SetDisplayOffset
    419          	SetStartLine(0x00);			// Set Mapping RAM Display Start Line (0x00~0x3F)
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      BL       SetStartLine
    420          	SetChargePump(0x04);		// Enable Embedded DC/DC Converter (0x00/0x04)
   \   00000084   0x2004             MOVS     R0,#+4
   \   00000086   0x.... 0x....      BL       SetChargePump
    421          	SetAddressingMode(0x02);	// Set Page Addressing Mode (0x00/0x01/0x02)
   \   0000008A   0x2002             MOVS     R0,#+2
   \   0000008C   0x.... 0x....      BL       SetAddressingMode
    422          	SetSegmentRemap(0x01);		// Set SEG/Column Mapping     0x00左右反置 0x01正常
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0x.... 0x....      BL       SetSegmentRemap
    423          	SetCommonRemap(0x08);		// Set COM/Row Scan Direction 0x00上下反置 0x08正常
   \   00000096   0x2008             MOVS     R0,#+8
   \   00000098   0x.... 0x....      BL       SetCommonRemap
    424          	SetCommonConfig(0x10);		// Set Sequential Configuration (0x00/0x10)
   \   0000009C   0x2010             MOVS     R0,#+16
   \   0000009E   0x.... 0x....      BL       SetCommonConfig
    425          	SetContrastControl(0xCF);	// Set SEG Output Current
   \   000000A2   0x20CF             MOVS     R0,#+207
   \   000000A4   0x.... 0x....      BL       SetContrastControl
    426          	SetPrechargePeriod(0xF1);	// Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   000000A8   0x20F1             MOVS     R0,#+241
   \   000000AA   0x.... 0x....      BL       SetPrechargePeriod
    427          	SetVCOMH(0x40);				// Set VCOM Deselect Level
   \   000000AE   0x2040             MOVS     R0,#+64
   \   000000B0   0x.... 0x....      BL       SetVCOMH
    428          	SetEntireDisplay(0x00);		// Disable Entire Display On (0x00/0x01)
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x.... 0x....      BL       SetEntireDisplay
    429          	SetInverseDisplay(0x00);	// Disable Inverse Display On (0x00/0x01)
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      BL       SetInverseDisplay
    430          	SetDisplay_On_Off(0x01);	// Display On (0x00/0x01)
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x.... 0x....      BL       SetDisplay_On_Off
    431          	OLED_Fill(0x00);
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x.... 0x....      BL       OLED_Fill
    432          	OLED_SetPosition(0,0);
   \   000000CC   0x2100             MOVS     R1,#+0
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x.... 0x....      BL       OLED_SetPosition
    433          }
   \   000000D4   0xBD01             POP      {R0,PC}          ;; return
    434          

   \                                 In section .text, align 2, keep-with-next
    435          void OLED_GPIO_Config(void)
    436          {
   \                     OLED_GPIO_Config: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    437          	static GPIO_InitTypeDef GPIO_InitStructure;
    438          
    439          	GPIO_InitStructure.GPIO_PTx = OLED_GPIO_PTx;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x400ff100
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    440          	GPIO_InitStructure.GPIO_Pins =  OLED_GPIO_SCLK | OLED_GPIO_SDA | OLED_GPIO_RST | OLED_GPIO_DC;
   \   0000000C   0x200F             MOVS     R0,#+15
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000012   0x6048             STR      R0,[R1, #+4]
    441          	GPIO_InitStructure.GPIO_Dir = DIR_OUTPUT;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   0000001A   0x7308             STRB     R0,[R1, #+12]
    442          	GPIO_InitStructure.GPIO_Output = OUTPUT_H;
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000022   0x7348             STRB     R0,[R1, #+13]
    443          
    444          	LPLD_GPIO_Init(GPIO_InitStructure);
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000028   0xB084             SUB      SP,SP,#+16
   \   0000002A   0x4668             MOV      R0,SP
   \   0000002C   0x2214             MOVS     R2,#+20
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000032   0xBC0F             POP      {R0-R3}
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Init
    445          }
   \   00000038   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??GPIO_InitStructure:
   \   00000000                      DS8 20
    446          

   \                                 In section .text, align 2, keep-with-next
    447          void OLED_Put6x8Char(unsigned char x, unsigned char y, unsigned char ch)
    448          {
   \                     OLED_Put6x8Char: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    449          	unsigned char c = 0, i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
    450          
    451          	c = ch - 32;
   \   00000006   0xF1B2 0x0420      SUBS     R4,R2,#+32
    452          
    453          	if(x > 122)
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x287B             CMP      R0,#+123
   \   0000000E   0xDB01             BLT.N    ??OLED_Put6x8Char_0
    454          	{
    455          		x = 0;
   \   00000010   0x2000             MOVS     R0,#+0
    456          		y++;
   \   00000012   0x1C49             ADDS     R1,R1,#+1
    457          	}
    458          	OLED_SetPosition(x, y);
   \                     ??OLED_Put6x8Char_0: (+1)
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OLED_SetPosition
    459          
    460          	for(i = 0 ; i < 6 ; i++)
   \   0000001C   0x2500             MOVS     R5,#+0
   \   0000001E   0xE00A             B.N      ??OLED_Put6x8Char_1
    461          		OLED_WriteData(F6x8[c][i]);
   \                     ??OLED_Put6x8Char_2: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2106             MOVS     R1,#+6
   \   00000028   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000002C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002E   0x5C28             LDRB     R0,[R5, R0]
   \   00000030   0x.... 0x....      BL       OLED_WriteData
   \   00000034   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_Put6x8Char_1: (+1)
   \   00000036   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000038   0x2D06             CMP      R5,#+6
   \   0000003A   0xDBF1             BLT.N    ??OLED_Put6x8Char_2
    462          }
   \   0000003C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    463          

   \                                 In section .text, align 2, keep-with-next
    464          void OLED_Put6x8Str(unsigned char x, unsigned char y, unsigned char ch[])
    465          {
   \                     OLED_Put6x8Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    466          	unsigned char c = 0, i = 0, j = 0;
   \   0000000A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000000E   0xF05F 0x0900      MOVS     R9,#+0
   \   00000012   0x2700             MOVS     R7,#+0
   \   00000014   0xE015             B.N      ??OLED_Put6x8Str_0
    467          
    468          	while(ch[j] != '\0')
    469          	{
    470          		c = ch[j] - 32;
    471          
    472          		if(x > 126)
    473          		{
    474          			x = 0;
    475          			y++;
    476          		}
    477          		OLED_SetPosition(x, y);
    478          
    479          		for(i = 0 ; i < 6 ; i++)
    480          			OLED_WriteData(F6x8[c][i]);
   \                     ??OLED_Put6x8Str_1: (+1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000001A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001E   0x2106             MOVS     R1,#+6
   \   00000020   0xFB01 0x0008      MLA      R0,R1,R8,R0
   \   00000024   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000028   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   0000002C   0x.... 0x....      BL       OLED_WriteData
   \   00000030   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??OLED_Put6x8Str_2: (+1)
   \   00000034   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000038   0xF1B9 0x0F06      CMP      R9,#+6
   \   0000003C   0xDBEB             BLT.N    ??OLED_Put6x8Str_1
    481          		x += 6;
   \   0000003E   0x1DA4             ADDS     R4,R4,#+6
    482          		j++;
   \   00000040   0x1C7F             ADDS     R7,R7,#+1
   \                     ??OLED_Put6x8Str_0: (+1)
   \   00000042   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000044   0x5DB8             LDRB     R0,[R7, R6]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD011             BEQ.N    ??OLED_Put6x8Str_3
   \   0000004A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000004C   0x5DB8             LDRB     R0,[R7, R6]
   \   0000004E   0xF1B0 0x0820      SUBS     R8,R0,#+32
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0x2C7F             CMP      R4,#+127
   \   00000056   0xDB01             BLT.N    ??OLED_Put6x8Str_4
   \   00000058   0x2400             MOVS     R4,#+0
   \   0000005A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_Put6x8Str_4: (+1)
   \   0000005C   0x0029             MOVS     R1,R5
   \   0000005E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000060   0x0020             MOVS     R0,R4
   \   00000062   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000064   0x.... 0x....      BL       OLED_SetPosition
   \   00000068   0xF05F 0x0900      MOVS     R9,#+0
   \   0000006C   0xE7E2             B.N      ??OLED_Put6x8Str_2
    483          	}
    484          }
   \                     ??OLED_Put6x8Str_3: (+1)
   \   0000006E   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    485          

   \                                 In section .text, align 2, keep-with-next
    486          void OLED_PrintCharValue(unsigned char x, unsigned char y, unsigned char data)
    487          {
   \                     OLED_PrintCharValue: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    488          	OLED_Put6x8Char(x, y, (data / 100) + 48);
   \   00000008   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000A   0x2064             MOVS     R0,#+100
   \   0000000C   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   00000010   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000014   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000016   0x0029             MOVS     R1,R5
   \   00000018   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x.... 0x....      BL       OLED_Put6x8Char
    489          	OLED_Put6x8Char(x + 6, y, ((data % 100) / 10) + 48);
   \   00000022   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000024   0x2064             MOVS     R0,#+100
   \   00000026   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   0000002A   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   0000002E   0x210A             MOVS     R1,#+10
   \   00000030   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000034   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000038   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003A   0x0029             MOVS     R1,R5
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x1DA0             ADDS     R0,R4,#+6
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x.... 0x....      BL       OLED_Put6x8Char
    490          	OLED_Put6x8Char(x + 12, y, (data % 10) + 48);
   \   00000046   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000048   0x200A             MOVS     R0,#+10
   \   0000004A   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   0000004E   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000052   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000056   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000058   0x0029             MOVS     R1,R5
   \   0000005A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005C   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x.... 0x....      BL       OLED_Put6x8Char
    491          }
   \   00000066   0xBD70             POP      {R4-R6,PC}       ;; return
    492          

   \                                 In section .text, align 2, keep-with-next
    493          void OLED_PrintIntValue(unsigned char x, unsigned char y, int data)
    494          {
   \                     OLED_PrintIntValue: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    495          	if(data < 0)
   \   00000008   0x2E00             CMP      R6,#+0
   \   0000000A   0xD508             BPL.N    ??OLED_PrintIntValue_0
    496          	{
    497          			OLED_Put6x8Char(x, y, '-');
   \   0000000C   0x222D             MOVS     R2,#+45
   \   0000000E   0x0029             MOVS     R1,R5
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       OLED_Put6x8Char
    498          			data = -data;
   \   0000001A   0x4276             RSBS     R6,R6,#+0
   \   0000001C   0xE006             B.N      ??OLED_PrintIntValue_1
    499          	}
    500          	else
    501          			OLED_Put6x8Char(x, y, '+');
   \                     ??OLED_PrintIntValue_0: (+1)
   \   0000001E   0x222B             MOVS     R2,#+43
   \   00000020   0x0029             MOVS     R1,R5
   \   00000022   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x.... 0x....      BL       OLED_Put6x8Char
    502          
    503          	OLED_Put6x8Char(x + 6, y, (data / 1000) + 48);
   \                     ??OLED_PrintIntValue_1: (+1)
   \   0000002C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000030   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   00000034   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000038   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003A   0x0029             MOVS     R1,R5
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x1DA0             ADDS     R0,R4,#+6
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x.... 0x....      BL       OLED_Put6x8Char
    504          	OLED_Put6x8Char(x + 12, y, ((data % 1000) / 100) + 48);
   \   00000046   0xF44F 0x707A      MOV      R0,#+1000
   \   0000004A   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   0000004E   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000052   0x2164             MOVS     R1,#+100
   \   00000054   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000058   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000005C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x.... 0x....      BL       OLED_Put6x8Char
    505          	OLED_Put6x8Char(x + 18, y, ((data % 100) / 10) + 48);
   \   0000006C   0x2064             MOVS     R0,#+100
   \   0000006E   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   00000072   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000076   0x210A             MOVS     R1,#+10
   \   00000078   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000007C   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000080   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000082   0x0029             MOVS     R1,R5
   \   00000084   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000086   0xF114 0x0012      ADDS     R0,R4,#+18
   \   0000008A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008C   0x.... 0x....      BL       OLED_Put6x8Char
    506          	OLED_Put6x8Char(x + 24, y, (data % 10) + 48);
   \   00000090   0x200A             MOVS     R0,#+10
   \   00000092   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   00000096   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   0000009A   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000009E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A0   0x0029             MOVS     R1,R5
   \   000000A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A4   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x.... 0x....      BL       OLED_Put6x8Char
    507          }
   \   000000AE   0xBD70             POP      {R4-R6,PC}       ;; return
    508          

   \                                 In section .text, align 2, keep-with-next
    509          void OLED_PrintUintValue(unsigned char x, unsigned char y, unsigned int data)
    510          {
   \                     OLED_PrintUintValue: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    511          	OLED_Put6x8Char(x + 0, y, (data / 1000) + 48);
   \   00000008   0xF44F 0x707A      MOV      R0,#+1000
   \   0000000C   0xFBB6 0xF0F0      UDIV     R0,R6,R0
   \   00000010   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000014   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000016   0x0029             MOVS     R1,R5
   \   00000018   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x.... 0x....      BL       OLED_Put6x8Char
    512          	OLED_Put6x8Char(x + 6, y, ((data % 1000) / 100) + 48);
   \   00000022   0xF44F 0x707A      MOV      R0,#+1000
   \   00000026   0xFBB6 0xF1F0      UDIV     R1,R6,R0
   \   0000002A   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   0000002E   0x2164             MOVS     R1,#+100
   \   00000030   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000034   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000038   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003A   0x0029             MOVS     R1,R5
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x1DA0             ADDS     R0,R4,#+6
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x.... 0x....      BL       OLED_Put6x8Char
    513          	OLED_Put6x8Char(x + 12, y, ((data % 100) / 10) + 48);
   \   00000046   0x2064             MOVS     R0,#+100
   \   00000048   0xFBB6 0xF1F0      UDIV     R1,R6,R0
   \   0000004C   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000050   0x210A             MOVS     R1,#+10
   \   00000052   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000056   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000005A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005C   0x0029             MOVS     R1,R5
   \   0000005E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000060   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       OLED_Put6x8Char
    514          	OLED_Put6x8Char(x + 18, y, (data % 10) + 48);
   \   0000006A   0x200A             MOVS     R0,#+10
   \   0000006C   0xFBB6 0xF1F0      UDIV     R1,R6,R0
   \   00000070   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000074   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000078   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000007A   0x0029             MOVS     R1,R5
   \   0000007C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007E   0xF114 0x0012      ADDS     R0,R4,#+18
   \   00000082   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000084   0x.... 0x....      BL       OLED_Put6x8Char
    515          }
   \   00000088   0xBD70             POP      {R4-R6,PC}       ;; return
    516          

   \                                 In section .text, align 2, keep-with-next
    517          void OLED_PrintFloatValue(unsigned char x, unsigned char y, float data)
    518          {
   \                     OLED_PrintFloatValue: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0017             MOVS     R7,R2
    519          	int temp;
    520          
    521          	temp = (int)data;
   \   00000008   0x0038             MOVS     R0,R7
   \   0000000A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000000E   0x0006             MOVS     R6,R0
    522          	OLED_Put6x8Char(x + 0, y, ((temp % 1000) / 100) + 48);
   \   00000010   0xF44F 0x707A      MOV      R0,#+1000
   \   00000014   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   00000018   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   0000001C   0x2164             MOVS     R1,#+100
   \   0000001E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000022   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000026   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000028   0x0029             MOVS     R1,R5
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       OLED_Put6x8Char
    523          	OLED_Put6x8Char(x + 6, y, ((temp % 100) / 10) + 48);
   \   00000034   0x2064             MOVS     R0,#+100
   \   00000036   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   0000003A   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   0000003E   0x210A             MOVS     R1,#+10
   \   00000040   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000044   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000048   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000004A   0x0029             MOVS     R1,R5
   \   0000004C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   0x1DA0             ADDS     R0,R4,#+6
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x.... 0x....      BL       OLED_Put6x8Char
    524          	OLED_Put6x8Char(x + 12, y, (temp % 10) + 48);
   \   00000056   0x200A             MOVS     R0,#+10
   \   00000058   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   0000005C   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   00000060   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000064   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000066   0x0029             MOVS     R1,R5
   \   00000068   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006A   0xF114 0x000C      ADDS     R0,R4,#+12
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x.... 0x....      BL       OLED_Put6x8Char
    525          
    526          	OLED_Put6x8Char(x + 18, y, '.');
   \   00000074   0x222E             MOVS     R2,#+46
   \   00000076   0x0029             MOVS     R1,R5
   \   00000078   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007A   0xF114 0x0012      ADDS     R0,R4,#+18
   \   0000007E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000080   0x.... 0x....      BL       OLED_Put6x8Char
    527          
    528          	data = data * 100000 + 1;
   \   00000084   0x....             LDR.N    R0,??DataTable12_3  ;; 0x47c35000
   \   00000086   0x0039             MOVS     R1,R7
   \   00000088   0x.... 0x....      BL       __aeabi_fmul
   \   0000008C   0xF05F 0x517E      MOVS     R1,#+1065353216
   \   00000090   0x.... 0x....      BL       __aeabi_fadd
   \   00000094   0x0007             MOVS     R7,R0
    529          	temp = (int)data;
   \   00000096   0x0038             MOVS     R0,R7
   \   00000098   0x.... 0x....      BL       __aeabi_f2iz
   \   0000009C   0x0006             MOVS     R6,R0
    530          	temp %= 100000;
   \   0000009E   0x....             LDR.N    R0,??DataTable12_4  ;; 0x186a0
   \   000000A0   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   000000A4   0xFB00 0x6611      MLS      R6,R0,R1,R6
    531          	OLED_Put6x8Char(x + 24, y, (temp / 10000) + 48);
   \   000000A8   0xF242 0x7010      MOVW     R0,#+10000
   \   000000AC   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   000000B0   0xF110 0x0230      ADDS     R2,R0,#+48
   \   000000B4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B6   0x0029             MOVS     R1,R5
   \   000000B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BA   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000000BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C0   0x.... 0x....      BL       OLED_Put6x8Char
    532          	OLED_Put6x8Char(x + 30, y, ((temp % 10000) / 1000) + 48);
   \   000000C4   0xF242 0x7010      MOVW     R0,#+10000
   \   000000C8   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   000000CC   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   000000D0   0xF44F 0x717A      MOV      R1,#+1000
   \   000000D4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000D8   0xF110 0x0230      ADDS     R2,R0,#+48
   \   000000DC   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000DE   0x0029             MOVS     R1,R5
   \   000000E0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E2   0xF114 0x001E      ADDS     R0,R4,#+30
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x.... 0x....      BL       OLED_Put6x8Char
    533          	OLED_Put6x8Char(x + 36, y, ((temp % 1000) / 100) + 48);
   \   000000EC   0xF44F 0x707A      MOV      R0,#+1000
   \   000000F0   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   000000F4   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   000000F8   0x2164             MOVS     R1,#+100
   \   000000FA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000FE   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000102   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000104   0x0029             MOVS     R1,R5
   \   00000106   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000108   0xF114 0x0024      ADDS     R0,R4,#+36
   \   0000010C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010E   0x.... 0x....      BL       OLED_Put6x8Char
    534          }
   \   00000112   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    535          

   \                                 In section .text, align 2, keep-with-next
    536          static uint8 getBufPix(uint8 x, uint8 y)
    537          {
   \                     getBufPix: (+1)
   \   00000000   0xB410             PUSH     {R4}
    538          	extern uint8 ubyRange;
    539          
    540          	if (ubyRange)
   \   00000002   0x....             LDR.N    R2,??DataTable12_5
   \   00000004   0x7812             LDRB     R2,[R2, #+0]
   \   00000006   0x2A00             CMP      R2,#+0
   \   00000008   0xD01D             BEQ.N    ??getBufPix_0
    541          	{
    542          		return !(camera.buf1[x][y / 8] & (1 << (7 - (y % 8))));
   \   0000000A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000C   0x2208             MOVS     R2,#+8
   \   0000000E   0xFB91 0xF2F2      SDIV     R2,R1,R2
   \   00000012   0x....             LDR.N    R3,??DataTable12_6
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x2414             MOVS     R4,#+20
   \   00000018   0xFB04 0x3000      MLA      R0,R4,R0,R3
   \   0000001C   0x1810             ADDS     R0,R2,R0
   \   0000001E   0xF890 0x0020      LDRB     R0,[R0, #+32]
   \   00000022   0x2201             MOVS     R2,#+1
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x2308             MOVS     R3,#+8
   \   00000028   0xFB91 0xF4F3      SDIV     R4,R1,R3
   \   0000002C   0xFB04 0x1413      MLS      R4,R4,R3,R1
   \   00000030   0xF1D4 0x0107      RSBS     R1,R4,#+7
   \   00000034   0xFA12 0xF101      LSLS     R1,R2,R1
   \   00000038   0x4208             TST      R0,R1
   \   0000003A   0xD101             BNE.N    ??getBufPix_1
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xE000             B.N      ??getBufPix_2
   \                     ??getBufPix_1: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \                     ??getBufPix_2: (+1)
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0xE01C             B.N      ??getBufPix_3
    543          	}
    544          	else
    545          	{
    546          		return !(camera.buf2[x][y / 8] & (1 << (7 - (y % 8))));
   \                     ??getBufPix_0: (+1)
   \   00000046   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000048   0x2208             MOVS     R2,#+8
   \   0000004A   0xFB91 0xF2F2      SDIV     R2,R1,R2
   \   0000004E   0x....             LDR.N    R3,??DataTable12_6
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x2414             MOVS     R4,#+20
   \   00000054   0xFB04 0x3000      MLA      R0,R4,R0,R3
   \   00000058   0x1810             ADDS     R0,R2,R0
   \   0000005A   0xF890 0x0A48      LDRB     R0,[R0, #+2632]
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x2308             MOVS     R3,#+8
   \   00000064   0xFB91 0xF4F3      SDIV     R4,R1,R3
   \   00000068   0xFB04 0x1413      MLS      R4,R4,R3,R1
   \   0000006C   0xF1D4 0x0107      RSBS     R1,R4,#+7
   \   00000070   0xFA12 0xF101      LSLS     R1,R2,R1
   \   00000074   0x4208             TST      R0,R1
   \   00000076   0xD101             BNE.N    ??getBufPix_4
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0xE000             B.N      ??getBufPix_5
   \                     ??getBufPix_4: (+1)
   \   0000007C   0x2000             MOVS     R0,#+0
   \                     ??getBufPix_5: (+1)
   \   0000007E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??getBufPix_3: (+1)
   \   00000080   0xBC10             POP      {R4}
   \   00000082   0x4770             BX       LR               ;; return
    547          	}
    548          }
    549          

   \                                 In section .text, align 2, keep-with-next
    550          void OLED_DisplayImgCalc(void)
    551          {
   \                     OLED_DisplayImgCalc: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    552          	uint8 data;
    553          	uint8 i, j;
    554          	int cnt;
    555          
    556          	for (i = 0; i < 8; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE000             B.N      ??OLED_DisplayImgCalc_0
   \                     ??OLED_DisplayImgCalc_1: (+1)
   \   00000006   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_DisplayImgCalc_0: (+1)
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C08             CMP      R4,#+8
   \   0000000C   0xDA35             BGE.N    ??OLED_DisplayImgCalc_2
    557          	{
    558          		OLED_WriteCmd(0xb0 + i);
   \   0000000E   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       OLED_WriteCmd
    559          		OLED_WriteCmd(0x01);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       OLED_WriteCmd
    560          		OLED_WriteCmd(0x10);
   \   0000001E   0x2010             MOVS     R0,#+16
   \   00000020   0x.... 0x....      BL       OLED_WriteCmd
    561          		for (j = 0; j < 128; j++)
   \   00000024   0x2500             MOVS     R5,#+0
   \   00000026   0xE008             B.N      ??OLED_DisplayImgCalc_3
    562          		{
    563          			data = 0;
    564          
    565          			for (cnt = 7; cnt >= 0; cnt--)
    566          			{
    567          				data <<= 1;
    568          				data |= (camera.img[((i << 3) + cnt) << 1][j + (j >> 2)] && 1);
    569          			}
    570          
    571          			if (i == 7)
   \                     ??OLED_DisplayImgCalc_4: (+1)
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x2C07             CMP      R4,#+7
   \   0000002C   0xD101             BNE.N    ??OLED_DisplayImgCalc_5
    572          				data &= 0x0F;
   \   0000002E   0xF010 0x000F      ANDS     R0,R0,#0xF
    573          
    574          			OLED_WriteData(data);
   \                     ??OLED_DisplayImgCalc_5: (+1)
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x.... 0x....      BL       OLED_WriteData
   \   00000038   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_DisplayImgCalc_3: (+1)
   \   0000003A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003C   0x2D80             CMP      R5,#+128
   \   0000003E   0xDAE2             BGE.N    ??OLED_DisplayImgCalc_1
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x2107             MOVS     R1,#+7
   \   00000044   0xE002             B.N      ??OLED_DisplayImgCalc_6
   \                     ??OLED_DisplayImgCalc_7: (+1)
   \   00000046   0x2200             MOVS     R2,#+0
   \                     ??OLED_DisplayImgCalc_8: (+1)
   \   00000048   0x4310             ORRS     R0,R2,R0
   \   0000004A   0x1E49             SUBS     R1,R1,#+1
   \                     ??OLED_DisplayImgCalc_6: (+1)
   \   0000004C   0x2900             CMP      R1,#+0
   \   0000004E   0xD4EB             BMI.N    ??OLED_DisplayImgCalc_4
   \   00000050   0x0040             LSLS     R0,R0,#+1
   \   00000052   0x....             LDR.N    R2,??DataTable12_6
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0xEB11 0x03C4      ADDS     R3,R1,R4, LSL #+3
   \   0000005A   0x005B             LSLS     R3,R3,#+1
   \   0000005C   0x26A0             MOVS     R6,#+160
   \   0000005E   0xFB06 0x2203      MLA      R2,R6,R3,R2
   \   00000062   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000064   0x10AB             ASRS     R3,R5,#+2
   \   00000066   0xFA53 0xF385      UXTAB    R3,R3,R5
   \   0000006A   0x189A             ADDS     R2,R3,R2
   \   0000006C   0xF241 0x4370      MOVW     R3,#+5232
   \   00000070   0x5C9A             LDRB     R2,[R3, R2]
   \   00000072   0x2A00             CMP      R2,#+0
   \   00000074   0xD0E7             BEQ.N    ??OLED_DisplayImgCalc_7
   \   00000076   0x2201             MOVS     R2,#+1
   \   00000078   0xE7E6             B.N      ??OLED_DisplayImgCalc_8
    575          		}
    576          	}
    577          }
   \                     ??OLED_DisplayImgCalc_2: (+1)
   \   0000007A   0xBD70             POP      {R4-R6,PC}       ;; return
    578          

   \                                 In section .text, align 2, keep-with-next
    579          void OLED_DisplayImg(void)
    580          {
   \                     OLED_DisplayImg: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    581          	uint8 i, j;
    582          	uint8 data;
    583          	int cnt;
    584          
    585          	for (i = 0; i < 8; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE000             B.N      ??OLED_DisplayImg_0
   \                     ??OLED_DisplayImg_1: (+1)
   \   00000006   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_DisplayImg_0: (+1)
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C08             CMP      R4,#+8
   \   0000000C   0xDA31             BGE.N    ??OLED_DisplayImg_2
    586          	{
    587          		OLED_WriteCmd(0xb0 + i);
   \   0000000E   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       OLED_WriteCmd
    588          		OLED_WriteCmd(0x01);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       OLED_WriteCmd
    589          		OLED_WriteCmd(0x10);
   \   0000001E   0x2010             MOVS     R0,#+16
   \   00000020   0x.... 0x....      BL       OLED_WriteCmd
    590          		for (j = 0; j < 128; j++)
   \   00000024   0x2500             MOVS     R5,#+0
   \   00000026   0xE009             B.N      ??OLED_DisplayImg_3
    591          		{
    592          			data = 0;
    593          
    594          			for (cnt = 7; cnt >= 0; cnt--)
    595          			{
    596          				data <<= 1;
    597          				data |= (getBufPix(((i << 3) + cnt) << 1, j + (j >> 2)) && 1);
    598          			}
    599          
    600          			if (i == 7)
   \                     ??OLED_DisplayImg_4: (+1)
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x2C07             CMP      R4,#+7
   \   0000002C   0xD101             BNE.N    ??OLED_DisplayImg_5
    601          				data &= 0x0F;
   \   0000002E   0xF016 0x060F      ANDS     R6,R6,#0xF
    602          
    603          			OLED_WriteData(data);
   \                     ??OLED_DisplayImg_5: (+1)
   \   00000032   0x0030             MOVS     R0,R6
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x.... 0x....      BL       OLED_WriteData
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_DisplayImg_3: (+1)
   \   0000003C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003E   0x2D80             CMP      R5,#+128
   \   00000040   0xDAE1             BGE.N    ??OLED_DisplayImg_1
   \   00000042   0x2600             MOVS     R6,#+0
   \   00000044   0x2707             MOVS     R7,#+7
   \   00000046   0xE002             B.N      ??OLED_DisplayImg_6
   \                     ??OLED_DisplayImg_7: (+1)
   \   00000048   0x2000             MOVS     R0,#+0
   \                     ??OLED_DisplayImg_8: (+1)
   \   0000004A   0x4306             ORRS     R6,R0,R6
   \   0000004C   0x1E7F             SUBS     R7,R7,#+1
   \                     ??OLED_DisplayImg_6: (+1)
   \   0000004E   0x2F00             CMP      R7,#+0
   \   00000050   0xD4EA             BMI.N    ??OLED_DisplayImg_4
   \   00000052   0x0076             LSLS     R6,R6,#+1
   \   00000054   0x0028             MOVS     R0,R5
   \   00000056   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000058   0xEB15 0x0190      ADDS     R1,R5,R0, LSR #+2
   \   0000005C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005E   0xEB17 0x00C4      ADDS     R0,R7,R4, LSL #+3
   \   00000062   0x0040             LSLS     R0,R0,#+1
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       getBufPix
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD0EC             BEQ.N    ??OLED_DisplayImg_7
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0xE7EB             B.N      ??OLED_DisplayImg_8
    604          		}
    605          	}
    606          }
   \                     ??OLED_DisplayImg_2: (+1)
   \   00000072   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    607          

   \                                 In section .rodata, align 4
    608          const unsigned char CH16x16[][32] =
   \                     CH16x16:
   \   00000000   0xFC 0x04          DC8 252, 4, 252, 0, 18, 100, 16, 8, 247, 20, 84, 148, 20, 244, 4, 0, 15
   \              0xFC 0x00    
   \              0x12 0x64    
   \              0x10 0x08    
   \              0xF7 0x14    
   \              0x54 0x94    
   \              0x14 0xF4    
   \              0x04 0x00    
   \              0x0F         
   \   00000011   0x04 0x0F          DC8 4, 15, 0, 4, 126, 1, 29, 19, 17, 85, 153, 81, 63, 17, 0, 0, 128, 96
   \              0x00 0x04    
   \              0x7E 0x01    
   \              0x1D 0x13    
   \              0x11 0x55    
   \              0x99 0x51    
   \              0x3F 0x11    
   \              0x00 0x00    
   \              0x80 0x60    
   \   00000023   0xF8 0x07          DC8 248, 7, 64, 32, 24, 15, 8, 200, 8, 8, 40, 24, 0, 1, 0, 0, 255, 0
   \              0x40 0x20    
   \              0x18 0x0F    
   \              0x08 0xC8    
   \              0x08 0x08    
   \              0x28 0x18    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0xFF 0x00    
   \   00000035   0x10 0x0C          DC8 16, 12, 3, 64, 128, 127, 0, 1, 6, 24, 0, 16, 16, 240, 31, 16, 240
   \              0x03 0x40    
   \              0x80 0x7F    
   \              0x00 0x01    
   \              0x06 0x18    
   \              0x00 0x10    
   \              0x10 0xF0    
   \              0x1F 0x10    
   \              0xF0         
   \   00000046   0x00 0x80          DC8 0, 128, 130, 130, 226, 146, 138, 134, 128, 0, 64, 34, 21, 8, 22, 97
   \              0x82 0x82    
   \              0xE2 0x92    
   \              0x8A 0x86    
   \              0x80 0x00    
   \              0x40 0x22    
   \              0x15 0x08    
   \              0x16 0x61    
   \   00000056   0x00 0x00          DC8 0, 0, 64, 128, 127, 0, 0, 0, 0, 0, 64, 66, 204, 0, 0, 68, 84, 84
   \              0x40 0x80    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x42    
   \              0xCC 0x00    
   \              0x00 0x44    
   \              0x54 0x54    
   \   00000068   0x54 0x7F          DC8 84, 127, 84, 84, 84, 68, 64, 0, 0, 0, 127, 32, 16, 0, 255, 21, 21
   \              0x54 0x54    
   \              0x54 0x44    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x7F 0x20    
   \              0x10 0x00    
   \              0xFF 0x15    
   \              0x15         
   \   00000079   0x15 0x55          DC8 21, 85, 149, 127, 0, 0, 0, 128, 130, 130, 130, 254, 130, 130, 130
   \              0x95 0x7F    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x82 0x82    
   \              0x82 0xFE    
   \              0x82 0x82    
   \              0x82         
   \   00000088   0x82 0x82          DC8 130, 130, 254, 130, 130, 130, 128, 0, 0, 128, 64, 48, 15, 0, 0, 0
   \              0xFE 0x82    
   \              0x82 0x82    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x40 0x30    
   \              0x0F 0x00    
   \              0x00 0x00    
   \   00000098   0x00 0x00          DC8 0, 0, 255, 0, 0, 0, 0, 0, 16, 16, 240, 31, 16, 240, 0, 64, 224, 88
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF0 0x1F    
   \              0x10 0xF0    
   \              0x00 0x40    
   \              0xE0 0x58    
   \   000000AA   0x47 0x40          DC8 71, 64, 80, 96, 192, 0, 64, 34, 21, 8, 22, 33, 0, 0, 254, 66, 66
   \              0x50 0x60    
   \              0xC0 0x00    
   \              0x40 0x22    
   \              0x15 0x08    
   \              0x16 0x21    
   \              0x00 0x00    
   \              0xFE 0x42    
   \              0x42         
   \   000000BB   0x42 0x42          DC8 66, 66, 254, 0, 0, 0, 252, 4, 4, 252, 0, 0, 252, 68, 70, 69, 68, 68
   \              0xFE 0x00    
   \              0x00 0x00    
   \              0xFC 0x04    
   \              0x04 0xFC    
   \              0x00 0x00    
   \              0xFC 0x44    
   \              0x46 0x45    
   \              0x44 0x44    
   \   000000CD   0xFC 0x00          DC8 252, 0, 0, 0, 31, 8, 8, 31, 0, 0, 255, 68, 68, 68, 68, 68, 255, 0
   \              0x00 0x00    
   \              0x1F 0x08    
   \              0x08 0x1F    
   \              0x00 0x00    
   \              0xFF 0x44    
   \              0x44 0x44    
   \              0x44 0x44    
   \              0xFF 0x00    
   \   000000DF   0x00 0x00          DC8 0, 0, 128, 96, 248, 7, 0, 248, 1, 6, 0, 4, 4, 4, 252, 0, 0, 1, 0, 0
   \              0x80 0x60    
   \              0xF8 0x07    
   \              0x00 0xF8    
   \              0x01 0x06    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0xFC 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   000000F3   0xFF 0x00          DC8 255, 0, 0, 255, 0, 0, 0, 0, 64, 128, 127, 0, 0, 0, 248, 12, 11, 8
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x80    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0xF8 0x0C    
   \              0x0B 0x08    
   \   00000105   0x08 0xF8          DC8 8, 248, 64, 48, 143, 8, 8, 8, 248, 0, 0, 0, 127, 33, 33, 33, 33
   \              0x40 0x30    
   \              0x8F 0x08    
   \              0x08 0x08    
   \              0xF8 0x00    
   \              0x00 0x00    
   \              0x7F 0x21    
   \              0x21 0x21    
   \              0x21         
   \   00000116   0x7F 0x00          DC8 127, 0, 0, 0, 67, 128, 64, 63, 0, 0, 0, 4, 36, 36, 36, 36, 36, 255
   \              0x00 0x00    
   \              0x43 0x80    
   \              0x40 0x3F    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x24 0xFF    
   \   00000128   0x24 0x24          DC8 36, 36, 36, 36, 36, 4, 0, 0, 33, 33, 17, 9, 253, 131, 65, 35, 5, 9
   \              0x24 0x24    
   \              0x24 0x04    
   \              0x00 0x00    
   \              0x21 0x21    
   \              0x11 0x09    
   \              0xFD 0x83    
   \              0x41 0x23    
   \              0x05 0x09    
   \   0000013A   0x11 0x29          DC8 17, 41, 37, 65, 65, 0, 16, 96, 2, 140, 0, 12, 164, 164, 165, 230
   \              0x25 0x41    
   \              0x41 0x00    
   \              0x10 0x60    
   \              0x02 0x8C    
   \              0x00 0x0C    
   \              0xA4 0xA4    
   \              0xA5 0xE6    
   \   0000014A   0xA4 0xA4          DC8 164, 164, 164, 12, 0, 0, 4, 4, 126, 1, 0, 128, 79, 42, 10, 15, 10
   \              0xA4 0x0C    
   \              0x00 0x00    
   \              0x04 0x04    
   \              0x7E 0x01    
   \              0x00 0x80    
   \              0x4F 0x2A    
   \              0x0A 0x0F    
   \              0x0A         
   \   0000015B   0x2A 0x4F          DC8 42, 79, 128, 0, 0, 0, 252, 4, 4, 252, 0, 254, 130, 130, 254, 130
   \              0x80 0x00    
   \              0x00 0x00    
   \              0xFC 0x04    
   \              0x04 0xFC    
   \              0x00 0xFE    
   \              0x82 0x82    
   \              0xFE 0x82    
   \   0000016B   0x82 0xFE          DC8 130, 254, 0, 0, 0, 0, 15, 4, 4, 15, 0, 63, 64, 64, 64, 64, 64, 65
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0F 0x04    
   \              0x04 0x0F    
   \              0x00 0x3F    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x41    
   \   0000017D   0x40 0x78          DC8 64, 120, 0, 16, 16, 16, 255, 144, 64, 16, 144, 16, 17, 22, 16, 16
   \              0x00 0x10    
   \              0x10 0x10    
   \              0xFF 0x90    
   \              0x40 0x10    
   \              0x90 0x10    
   \              0x11 0x16    
   \              0x10 0x10    
   \   0000018D   0xD0 0x10          DC8 208, 16, 0, 2, 66, 129, 127, 0, 64, 64, 65, 94, 64, 64, 112, 78, 65
   \              0x00 0x02    
   \              0x42 0x81    
   \              0x7F 0x00    
   \              0x40 0x40    
   \              0x41 0x5E    
   \              0x40 0x40    
   \              0x70 0x4E    
   \              0x41         
   \   0000019E   0x40 0x00          DC8 64, 0, 64, 68, 84, 100, 69, 126, 68, 68, 68, 126, 69, 100, 84, 68
   \              0x40 0x44    
   \              0x54 0x64    
   \              0x45 0x7E    
   \              0x44 0x44    
   \              0x44 0x7E    
   \              0x45 0x64    
   \              0x54 0x44    
   \   000001AE   0x40 0x00          DC8 64, 0, 0, 0, 0, 255, 73, 73, 73, 73, 73, 73, 73, 255, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x49 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001C1   0x00 0x3E          DC8 0, 62, 34, 42, 50, 34, 254, 34, 50, 42, 34, 62, 0, 0, 0, 136, 104
   \              0x22 0x2A    
   \              0x32 0x22    
   \              0xFE 0x22    
   \              0x32 0x2A    
   \              0x22 0x3E    
   \              0x00 0x00    
   \              0x00 0x88    
   \              0x68         
   \   000001D2   0x09 0x09          DC8 9, 9, 41, 201, 9, 15, 41, 201, 9, 9, 41, 200, 8, 0, 16, 136, 196
   \              0x29 0xC9    
   \              0x09 0x0F    
   \              0x29 0xC9    
   \              0x09 0x09    
   \              0x29 0xC8    
   \              0x08 0x00    
   \              0x10 0x88    
   \              0xC4         
   \   000001E3   0x33 0x04          DC8 51, 4, 244, 148, 148, 244, 159, 244, 148, 148, 244, 4, 0, 1, 0, 255
   \              0xF4 0x94    
   \              0x94 0xF4    
   \              0x9F 0xF4    
   \              0x94 0x94    
   \              0xF4 0x04    
   \              0x00 0x01    
   \              0x00 0xFF    
   \   000001F3   0x00 0x42          DC8 0, 66, 50, 2, 114, 130, 134, 154, 130, 226, 10, 50, 0, 32, 48, 172
   \              0x32 0x02    
   \              0x72 0x82    
   \              0x86 0x9A    
   \              0x82 0xE2    
   \              0x0A 0x32    
   \              0x00 0x20    
   \              0x30 0xAC    
   \   00000203   0x63 0x30          DC8 99, 48, 0, 0, 254, 34, 34, 34, 34, 254, 0, 0, 0, 34, 103, 34, 18
   \              0x00 0x00    
   \              0xFE 0x22    
   \              0x22 0x22    
   \              0x22 0xFE    
   \              0x00 0x00    
   \              0x00 0x22    
   \              0x67 0x22    
   \              0x12         
   \   00000214   0x12 0x40          DC8 18, 64, 64, 127, 66, 66, 66, 66, 127, 64, 64, 0, 4, 116, 84, 85, 86
   \              0x40 0x7F    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0x7F 0x40    
   \              0x40 0x00    
   \              0x04 0x74    
   \              0x54 0x55    
   \              0x56         
   \   00000225   0x54 0x74          DC8 84, 116, 4, 0, 254, 2, 34, 218, 6, 0, 0, 16, 17, 81, 145, 125, 11
   \              0x04 0x00    
   \              0xFE 0x02    
   \              0x22 0xDA    
   \              0x06 0x00    
   \              0x00 0x10    
   \              0x11 0x51    
   \              0x91 0x7D    
   \              0x0B         
   \   00000236   0x09 0x08          DC8 9, 8, 0, 255, 8, 16, 8, 7, 0, 0, 0, 248, 8, 255, 8, 248, 0, 254, 66
   \              0x00 0xFF    
   \              0x08 0x10    
   \              0x08 0x07    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x08 0xFF    
   \              0x08 0xF8    
   \              0x00 0xFE    
   \              0x42         
   \   00000249   0x82 0x02          DC8 130, 2, 254, 0, 0, 0, 0, 0, 15, 0, 255, 8, 143, 96, 31, 0, 1, 0, 63
   \              0xFE 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0F 0x00    
   \              0xFF 0x08    
   \              0x8F 0x60    
   \              0x1F 0x00    
   \              0x01 0x00    
   \              0x3F         
   \   0000025C   0x40 0x40          DC8 64, 64, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x78 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000271   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    609          {
    610          	{0xFC,0x04,0xFC,0x00,0x12,0x64,0x10,0x08,0xF7,0x14,0x54,0x94,0x14,0xF4,0x04,0x00,
    611          	0x0F,0x04,0x0F,0x00,0x04,0x7E,0x01,0x1D,0x13,0x11,0x55,0x99,0x51,0x3F,0x11,0x00}, // 0 hai
    612          	{0x00,0x80,0x60,0xF8,0x07,0x40,0x20,0x18,0x0F,0x08,0xC8,0x08,0x08,0x28,0x18,0x00,
    613          	0x01,0x00,0x00,0xFF,0x00,0x10,0x0C,0x03,0x40,0x80,0x7F,0x00,0x01,0x06,0x18,0x00}, // 1 ni
    614          	{0x10,0x10,0xF0,0x1F,0x10,0xF0,0x00,0x80,0x82,0x82,0xE2,0x92,0x8A,0x86,0x80,0x00,
    615          	0x40,0x22,0x15,0x08,0x16,0x61,0x00,0x00,0x40,0x80,0x7F,0x00,0x00,0x00,0x00,0x00}, // 2 hao
    616          	{0x40,0x42,0xCC,0x00,0x00,0x44,0x54,0x54,0x54,0x7F,0x54,0x54,0x54,0x44,0x40,0x00,
    617          	0x00,0x00,0x7F,0x20,0x10,0x00,0xFF,0x15,0x15,0x15,0x55,0x95,0x7F,0x00,0x00,0x00}, // 3 qing
    618          	{0x80,0x82,0x82,0x82,0xFE,0x82,0x82,0x82,0x82,0x82,0xFE,0x82,0x82,0x82,0x80,0x00,
    619          	0x00,0x80,0x40,0x30,0x0F,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00}, // 4 kai
    620          	{0x10,0x10,0xF0,0x1F,0x10,0xF0,0x00,0x40,0xE0,0x58,0x47,0x40,0x50,0x60,0xC0,0x00,
    621          	0x40,0x22,0x15,0x08,0x16,0x21,0x00,0x00,0xFE,0x42,0x42,0x42,0x42,0xFE,0x00,0x00}, // 5 shi
    622          	{0x00,0xFC,0x04,0x04,0xFC,0x00,0x00,0xFC,0x44,0x46,0x45,0x44,0x44,0xFC,0x00,0x00,
    623          	0x00,0x1F,0x08,0x08,0x1F,0x00,0x00,0xFF,0x44,0x44,0x44,0x44,0x44,0xFF,0x00,0x00}, // 6 zan
    624          	{0x00,0x80,0x60,0xF8,0x07,0x00,0xF8,0x01,0x06,0x00,0x04,0x04,0x04,0xFC,0x00,0x00,
    625          	0x01,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x40,0x80,0x7F,0x00,0x00}, // 7 men
    626          	{0x00,0xF8,0x0C,0x0B,0x08,0x08,0xF8,0x40,0x30,0x8F,0x08,0x08,0x08,0xF8,0x00,0x00,
    627          	0x00,0x7F,0x21,0x21,0x21,0x21,0x7F,0x00,0x00,0x00,0x43,0x80,0x40,0x3F,0x00,0x00}, // 8 de
    628          	{0x00,0x04,0x24,0x24,0x24,0x24,0x24,0xFF,0x24,0x24,0x24,0x24,0x24,0x04,0x00,0x00,
    629          	0x21,0x21,0x11,0x09,0xFD,0x83,0x41,0x23,0x05,0x09,0x11,0x29,0x25,0x41,0x41,0x00}, // 9 biao
    630          	{0x10,0x60,0x02,0x8C,0x00,0x0C,0xA4,0xA4,0xA5,0xE6,0xA4,0xA4,0xA4,0x0C,0x00,0x00,
    631          	0x04,0x04,0x7E,0x01,0x00,0x80,0x4F,0x2A,0x0A,0x0F,0x0A,0x2A,0x4F,0x80,0x00,0x00}, // 10 yan
    632          	{0x00,0xFC,0x04,0x04,0xFC,0x00,0xFE,0x82,0x82,0xFE,0x82,0x82,0xFE,0x00,0x00,0x00,
    633          	0x00,0x0F,0x04,0x04,0x0F,0x00,0x3F,0x40,0x40,0x40,0x40,0x40,0x41,0x40,0x78,0x00}, // 11 ba
    634          	{0x10,0x10,0x10,0xFF,0x90,0x40,0x10,0x90,0x10,0x11,0x16,0x10,0x10,0xD0,0x10,0x00,
    635          	0x02,0x42,0x81,0x7F,0x00,0x40,0x40,0x41,0x5E,0x40,0x40,0x70,0x4E,0x41,0x40,0x00}, // 12 la
    636          	{0x40,0x44,0x54,0x64,0x45,0x7E,0x44,0x44,0x44,0x7E,0x45,0x64,0x54,0x44,0x40,0x00,
    637          	0x00,0x00,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,0x00}, // 13 pu
    638          	{0x00,0x00,0x3E,0x22,0x2A,0x32,0x22,0xFE,0x22,0x32,0x2A,0x22,0x3E,0x00,0x00,0x00,
    639          	0x88,0x68,0x09,0x09,0x29,0xC9,0x09,0x0F,0x29,0xC9,0x09,0x09,0x29,0xC8,0x08,0x00}, // 14 hei
    640          	{0x10,0x88,0xC4,0x33,0x04,0xF4,0x94,0x94,0xF4,0x9F,0xF4,0x94,0x94,0xF4,0x04,0x00,
    641          	0x01,0x00,0xFF,0x00,0x42,0x32,0x02,0x72,0x82,0x86,0x9A,0x82,0xE2,0x0A,0x32,0x00}, // 15 de
    642          	{0x20,0x30,0xAC,0x63,0x30,0x00,0x00,0xFE,0x22,0x22,0x22,0x22,0xFE,0x00,0x00,0x00,
    643          	0x22,0x67,0x22,0x12,0x12,0x40,0x40,0x7F,0x42,0x42,0x42,0x42,0x7F,0x40,0x40,0x00}, // 16 zu
    644          	{0x04,0x74,0x54,0x55,0x56,0x54,0x74,0x04,0x00,0xFE,0x02,0x22,0xDA,0x06,0x00,0x00,
    645          	0x10,0x11,0x51,0x91,0x7D,0x0B,0x09,0x08,0x00,0xFF,0x08,0x10,0x08,0x07,0x00,0x00}, // 17
    646          	{0x00,0xF8,0x08,0xFF,0x08,0xF8,0x00,0xFE,0x42,0x82,0x02,0xFE,0x00,0x00,0x00,0x00,
    647          	0x00,0x0F,0x00,0xFF,0x08,0x8F,0x60,0x1F,0x00,0x01,0x00,0x3F,0x40,0x40,0x78,0x00}, // 18
    648          	{0}
    649          };
    650          

   \                                 In section .text, align 2, keep-with-next
    651          void OLED_Put16x16CH(unsigned char x, unsigned char y, unsigned char num)
    652          {
   \                     OLED_Put16x16CH: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    653          	unsigned char c = 0, i = 0;
   \   00000006   0x2600             MOVS     R6,#+0
   \   00000008   0x2700             MOVS     R7,#+0
    654          
    655          	c = num;
   \   0000000A   0x0016             MOVS     R6,R2
    656          
    657          	if (x > 114)
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x2C73             CMP      R4,#+115
   \   00000010   0xDB01             BLT.N    ??OLED_Put16x16CH_0
    658          	{
    659          		x = 0;
   \   00000012   0x2400             MOVS     R4,#+0
    660          		y++;
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
    661          	}
    662          	OLED_SetPosition(x, y);
   \                     ??OLED_Put16x16CH_0: (+1)
   \   00000016   0x0029             MOVS     R1,R5
   \   00000018   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x.... 0x....      BL       OLED_SetPosition
    663          
    664          	for (i = 0; i < 16; i++)
   \   00000022   0x2700             MOVS     R7,#+0
   \   00000024   0xE008             B.N      ??OLED_Put16x16CH_1
    665          		OLED_WriteData(CH16x16[c][i]);
   \                     ??OLED_Put16x16CH_2: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable12_7
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0xEB10 0x1046      ADDS     R0,R0,R6, LSL #+5
   \   0000002E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000030   0x5C38             LDRB     R0,[R7, R0]
   \   00000032   0x.... 0x....      BL       OLED_WriteData
   \   00000036   0x1C7F             ADDS     R7,R7,#+1
   \                     ??OLED_Put16x16CH_1: (+1)
   \   00000038   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003A   0x2F10             CMP      R7,#+16
   \   0000003C   0xDBF3             BLT.N    ??OLED_Put16x16CH_2
    666          
    667          	y++;
   \   0000003E   0x1C6D             ADDS     R5,R5,#+1
    668          	OLED_SetPosition(x, y);
   \   00000040   0x0029             MOVS     R1,R5
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x.... 0x....      BL       OLED_SetPosition
    669          
    670          	for (i = 16; i < 32; i++)
   \   0000004C   0x2710             MOVS     R7,#+16
   \   0000004E   0xE008             B.N      ??OLED_Put16x16CH_3
    671          		OLED_WriteData(CH16x16[c][i]);
   \                     ??OLED_Put16x16CH_4: (+1)
   \   00000050   0x....             LDR.N    R0,??DataTable12_7
   \   00000052   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000054   0xEB10 0x1046      ADDS     R0,R0,R6, LSL #+5
   \   00000058   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000005A   0x5C38             LDRB     R0,[R7, R0]
   \   0000005C   0x.... 0x....      BL       OLED_WriteData
   \   00000060   0x1C7F             ADDS     R7,R7,#+1
   \                     ??OLED_Put16x16CH_3: (+1)
   \   00000062   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000064   0x2F20             CMP      R7,#+32
   \   00000066   0xDBF3             BLT.N    ??OLED_Put16x16CH_4
    672          }
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    673          

   \                                 In section .rodata, align 4
    674          const unsigned char OLED_cat[] =
   \                     OLED_cat:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 224, 240, 240, 224, 224, 192, 128, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0xE0 0xF0    
   \              0xF0 0xE0    
   \              0xE0 0xC0    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 128, 192, 224, 224, 240, 240, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0xC0    
   \              0xE0 0xE0    
   \              0xF0 0xF0    
   \              0xE0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0xC1 0xFF          DC8 193, 255, 255, 255, 255, 127, 127, 127, 254, 254, 254, 254, 254
   \              0xFF 0xFF    
   \              0xFF 0x7F    
   \              0x7F 0x7F    
   \              0xFE 0xFE    
   \              0xFE 0xFE    
   \              0xFE         
   \   00000031   0xFE 0xFE          DC8 254, 254, 255, 127, 127, 127, 255, 255, 255, 193, 0, 0, 0, 0, 0
   \              0xFF 0x7F    
   \              0x7F 0x7F    
   \              0xFF 0xFF    
   \              0xFF 0xC1    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000040   0xCE 0xCE          DC8 206, 206, 206, 110, 127, 127, 255, 255, 252, 248, 248, 252, 255
   \              0xCE 0x6E    
   \              0x7F 0x7F    
   \              0xFF 0xFF    
   \              0xFC 0xF8    
   \              0xF8 0xFC    
   \              0xFF         
   \   0000004D   0xFF 0xFF          DC8 255, 255, 255, 255, 255, 255, 252, 248, 248, 248, 252, 255, 127
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFC 0xF8    
   \              0xF8 0xF8    
   \              0xFC 0xFF    
   \              0x7F         
   \   0000005A   0x7F 0x6E          DC8 127, 110, 206, 206, 206, 14, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 7, 7
   \              0xCE 0xCE    
   \              0xCE 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x03 0x07    
   \              0x07         
   \   0000006D   0x07 0x07          DC8 7, 7, 7, 7, 7, 7, 7, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x07 0x07    
   \              0x07 0x07    
   \              0x07 0x03    
   \              0x03 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    675          {
    676          	0x00,0x00,0x00,0x00,0xE0,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,
    677          	0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xF0,0xF0,0xE0,0x00,0x00,0x00,0x00,0x00,
    678          	0x00,0x00,0x00,0x00,0xC1,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0xFE,0xFE,0xFE,0xFE,
    679          	0xFE,0xFE,0xFE,0xFF,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xC1,0x00,0x00,0x00,0x00,0x00,
    680          	0xCE,0xCE,0xCE,0x6E,0x7F,0x7F,0xFF,0xFF,0xFC,0xF8,0xF8,0xFC,0xFF,0xFF,0xFF,0xFF,
    681          	0xFF,0xFF,0xFF,0xFC,0xF8,0xF8,0xF8,0xFC,0xFF,0x7F,0x7F,0x6E,0xCE,0xCE,0xCE,0x0E,
    682          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x03,0x07,0x07,0x07,0x07,0x07,
    683          	0x07,0x07,0x07,0x07,0x03,0x03,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    684          };
    685          

   \                                 In section .text, align 2, keep-with-next
    686          void OLED_DispACat(unsigned char x, unsigned char y)
    687          {
   \                     OLED_DispACat: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    688          	unsigned char i = 0, j = 0;
   \   00000006   0x2600             MOVS     R6,#+0
   \   00000008   0x2700             MOVS     R7,#+0
    689          
    690          	if (x > 96)
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2C61             CMP      R4,#+97
   \   0000000E   0xDB01             BLT.N    ??OLED_DispACat_0
    691          	{
    692          		x = 0;
   \   00000010   0x2400             MOVS     R4,#+0
    693          		y++;
   \   00000012   0x1C6D             ADDS     R5,R5,#+1
    694          	}
    695          
    696          	for (j = 0; j < 4; j++)
   \                     ??OLED_DispACat_0: (+1)
   \   00000014   0x2700             MOVS     R7,#+0
   \   00000016   0xE00C             B.N      ??OLED_DispACat_1
    697          	{
    698          		OLED_SetPosition(x, y);
    699          		y++;
    700          
    701          		for (i = 0; i < 32; i++)
    702          			OLED_WriteData(OLED_cat[i + j * 32]);
   \                     ??OLED_DispACat_2: (+1)
   \   00000018   0x....             LDR.N    R0,??DataTable12_8
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x0179             LSLS     R1,R7,#+5
   \   0000001E   0xFA51 0xF186      UXTAB    R1,R1,R6
   \   00000022   0x5C08             LDRB     R0,[R1, R0]
   \   00000024   0x.... 0x....      BL       OLED_WriteData
   \   00000028   0x1C76             ADDS     R6,R6,#+1
   \                     ??OLED_DispACat_3: (+1)
   \   0000002A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002C   0x2E20             CMP      R6,#+32
   \   0000002E   0xDBF3             BLT.N    ??OLED_DispACat_2
   \   00000030   0x1C7F             ADDS     R7,R7,#+1
   \                     ??OLED_DispACat_1: (+1)
   \   00000032   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000034   0x2F04             CMP      R7,#+4
   \   00000036   0xDA08             BGE.N    ??OLED_DispACat_4
   \   00000038   0x0029             MOVS     R1,R5
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x.... 0x....      BL       OLED_SetPosition
   \   00000044   0x1C6D             ADDS     R5,R5,#+1
   \   00000046   0x2600             MOVS     R6,#+0
   \   00000048   0xE7EF             B.N      ??OLED_DispACat_3
    703          	}
    704          }
   \                     ??OLED_DispACat_4: (+1)
   \   0000004A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    705          

   \                                 In section .rodata, align 4
    706          const unsigned char OLED_img[] =
   \                     OLED_img:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \   00000044   0xE0 0x38          DC8 224, 56, 12, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0C 0x07    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000059   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000070   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000009E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000B5   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 224, 248, 254, 255, 240, 224
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0 0xE0    
   \              0xF8 0xFE    
   \              0xFF 0xF0    
   \              0xE0         
   \   000000C6   0x80 0x00          DC8 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000DC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000F3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000010A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000121   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000138   0x00 0x00          DC8 0, 0, 128, 224, 240, 252, 255, 255, 127, 31, 15, 15, 63, 255, 255
   \              0x80 0xE0    
   \              0xF0 0xFC    
   \              0xFF 0xFF    
   \              0x7F 0x1F    
   \              0x0F 0x0F    
   \              0x3F 0xFF    
   \              0xFF         
   \   00000147   0xFE 0xF8          DC8 254, 248, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xF0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000015B   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000189   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B6   0xC0 0xF0          DC8 192, 240, 248, 254, 255, 255, 63, 15, 7, 1, 0, 0, 0, 0, 0, 0, 3, 7
   \              0xF8 0xFE    
   \              0xFF 0xFF    
   \              0x3F 0x0F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \   000001C8   0x1F 0x7F          DC8 31, 127, 255, 255, 252, 248, 224, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0xFF    
   \              0xFC 0xF8    
   \              0xE0 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001DA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001F1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000208   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000021F   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 224, 248
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0xE0    
   \              0xF8         
   \   00000234   0xFC 0xFF          DC8 252, 255, 255, 127, 31, 15, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0x7F    
   \              0x1F 0x0F    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000247   0x00 0x00          DC8 0, 0, 0, 1, 3, 15, 63, 255, 255, 255, 252, 240, 192, 0, 0, 0, 0, 0
   \              0x00 0x01    
   \              0x03 0x0F    
   \              0x3F 0xFF    
   \              0xFF 0xFF    
   \              0xFC 0xF0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000259   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000270   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000287   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000029E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 240, 252, 254
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xF0 0xFC    
   \              0xFE         
   \   000002B1   0xFF 0xFF          DC8 255, 255, 255, 207, 195, 193, 192, 192, 192, 192, 192, 192, 192
   \              0xFF 0xCF    
   \              0xC3 0xC1    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0         
   \   000002BE   0xC0 0xC0          DC8 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0         
   \   000002CB   0xC0 0xC0          DC8 192, 192, 192, 192, 193, 199, 207, 255, 255, 255, 254, 248, 224
   \              0xC0 0xC0    
   \              0xC1 0xC7    
   \              0xCF 0xFF    
   \              0xFF 0xFF    
   \              0xFE 0xF8    
   \              0xE0         
   \   000002D8   0x80 0x00          DC8 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002EE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02         
   \   00000305   0x02 0x02          DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02         
   \   0000031C   0x02 0x02          DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03         
   \   00000333   0x03 0x03          DC8 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03         
   \   0000034A   0x03 0x03          DC8 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 12, 56, 224, 128, 0
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x07    
   \              0x0C 0x38    
   \              0xE0 0x80    
   \              0x00         
   \   0000035F   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000376   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000038D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000003A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000003BB   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000003D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 28, 112, 192, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x07 0x1C    
   \              0x70 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000003E7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000003FE   0x00 0x00          DC8 0, 0
    707          {
    708          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    709          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    710          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    711          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    712          	0x00,0x00,0x00,0x80,0xE0,0x38,0x0C,0x07,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    713          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    714          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    715          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    716          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    717          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    718          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    719          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,
    720          	0xE0,0xF8,0xFE,0xFF,0xF0,0xE0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    721          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    722          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    723          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    724          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    725          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    726          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    727          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0xF0,0xFC,0xFF,0xFF,
    728          	0x7F,0x1F,0x0F,0x0F,0x3F,0xFF,0xFF,0xFE,0xF8,0xF0,0xC0,0x00,0x00,0x00,0x00,0x00,
    729          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    730          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    731          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    732          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    733          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    734          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    735          	0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF0,0xF8,0xFE,0xFF,0xFF,0x3F,0x0F,0x07,0x01,
    736          	0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x07,0x1F,0x7F,0xFF,0xFF,0xFC,0xF8,0xE0,0x80,
    737          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    738          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    739          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    740          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    741          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    742          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    743          	0x00,0x80,0xE0,0xF8,0xFC,0xFF,0xFF,0x7F,0x1F,0x0F,0x03,0x00,0x00,0x00,0x00,0x00,
    744          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x0F,0x3F,0xFF,0xFF,
    745          	0xFF,0xFC,0xF0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    746          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    747          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    748          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    749          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    750          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF0,0xFC,
    751          	0xFE,0xFF,0xFF,0xFF,0xCF,0xC3,0xC1,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
    752          	0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC1,
    753          	0xC7,0xCF,0xFF,0xFF,0xFF,0xFE,0xF8,0xE0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    754          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    755          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    756          	0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,
    757          	0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,
    758          	0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x03,0x03,0x03,0x03,
    759          	0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    760          	0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
    761          	0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x07,0x0C,0x38,0xE0,0x80,0x00,0x00,
    762          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    763          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    764          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    765          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    766          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    767          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    768          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    769          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x07,0x1C,
    770          	0x70,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    771          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    772          };
    773          

   \                                 In section .text, align 2, keep-with-next
    774          void OLED_DispAImg(void)
    775          {
   \                     OLED_DispAImg: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    776          	int i, j;
    777          
    778          	for (i = 0; i < 8; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE00A             B.N      ??OLED_DispAImg_0
    779          	{
    780          		OLED_SetPosition(0, i);
    781          
    782          		for (j = 0; j < 128; j++)
    783          			OLED_WriteData(OLED_img[j + i * 128]);
   \                     ??OLED_DispAImg_1: (+1)
   \   00000006   0x....             LDR.N    R0,??DataTable12_9
   \   00000008   0x2180             MOVS     R1,#+128
   \   0000000A   0xFB01 0x5104      MLA      R1,R1,R4,R5
   \   0000000E   0x5C08             LDRB     R0,[R1, R0]
   \   00000010   0x.... 0x....      BL       OLED_WriteData
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_DispAImg_2: (+1)
   \   00000016   0x2D80             CMP      R5,#+128
   \   00000018   0xDBF5             BLT.N    ??OLED_DispAImg_1
   \   0000001A   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_DispAImg_0: (+1)
   \   0000001C   0x2C08             CMP      R4,#+8
   \   0000001E   0xDA07             BGE.N    ??OLED_DispAImg_3
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x0001             MOVS     R1,R0
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       OLED_SetPosition
   \   0000002C   0x2500             MOVS     R5,#+0
   \   0000002E   0xE7F2             B.N      ??OLED_DispAImg_2
    784          	}
    785          }
   \                     ??OLED_DispAImg_3: (+1)
   \   00000030   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    786          

   \                                 In section .text, align 2, keep-with-next
    787          void OLED_DispMyScene(void)
    788          {
   \                     OLED_DispMyScene: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    789          	int i, j;
    790          
    791          	for (i = 0; i < 8; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE00A             B.N      ??OLED_DispMyScene_0
    792          	{
    793          		OLED_SetPosition(0, i);
    794          
    795          		for (j = 0; j < 128; j++)
    796          			OLED_WriteData(calc.myScene[j][i]);
   \                     ??OLED_DispMyScene_1: (+1)
   \   00000006   0x....             LDR.N    R0,??DataTable12_10
   \   00000008   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   0000000C   0x1820             ADDS     R0,R4,R0
   \   0000000E   0x7E00             LDRB     R0,[R0, #+24]
   \   00000010   0x.... 0x....      BL       OLED_WriteData
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
   \                     ??OLED_DispMyScene_2: (+1)
   \   00000016   0x2D80             CMP      R5,#+128
   \   00000018   0xDBF5             BLT.N    ??OLED_DispMyScene_1
   \   0000001A   0x1C64             ADDS     R4,R4,#+1
   \                     ??OLED_DispMyScene_0: (+1)
   \   0000001C   0x2C08             CMP      R4,#+8
   \   0000001E   0xDA07             BGE.N    ??OLED_DispMyScene_3
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x0001             MOVS     R1,R0
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       OLED_SetPosition
   \   0000002C   0x2500             MOVS     R5,#+0
   \   0000002E   0xE7F2             B.N      ??OLED_DispMyScene_2
    797          	}
    798          }
   \                     ??OLED_DispMyScene_3: (+1)
   \   00000030   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     ??GPIO_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x47C35000         DC32     0x47c35000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     ubyRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     camera

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     CH16x16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     OLED_cat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     OLED_img

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     calc

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   OLED_DelayMs
      24   OLED_DispACat
        24   -> OLED_SetPosition
        24   -> OLED_WriteData
      16   OLED_DispAImg
        16   -> OLED_SetPosition
        16   -> OLED_WriteData
      16   OLED_DispMyScene
        16   -> OLED_SetPosition
        16   -> OLED_WriteData
      24   OLED_DisplayImg
        24   -> OLED_WriteCmd
        24   -> OLED_WriteData
        24   -> getBufPix
      16   OLED_DisplayImgCalc
        16   -> OLED_WriteCmd
        16   -> OLED_WriteData
      16   OLED_Fill
        16   -> OLED_WriteCmd
        16   -> OLED_WriteData
      24   OLED_GPIO_Config
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4
       8   OLED_Init
         8   -> LPLD_GPIO_Output_b
         8   -> OLED_DelayMs
         8   -> OLED_Fill
         8   -> OLED_GPIO_Config
         8   -> OLED_SetPosition
         8   -> SetAddressingMode
         8   -> SetChargePump
         8   -> SetCommonConfig
         8   -> SetCommonRemap
         8   -> SetContrastControl
         8   -> SetDisplayClock
         8   -> SetDisplayOffset
         8   -> SetDisplay_On_Off
         8   -> SetEntireDisplay
         8   -> SetInverseDisplay
         8   -> SetMultiplexRatio
         8   -> SetPrechargePeriod
         8   -> SetSegmentRemap
         8   -> SetStartLine
         8   -> SetVCOMH
      16   OLED_PrintCharValue
        16   -> OLED_Put6x8Char
      24   OLED_PrintFloatValue
        24   -> OLED_Put6x8Char
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
      16   OLED_PrintIntValue
        16   -> OLED_Put6x8Char
      16   OLED_PrintUintValue
        16   -> OLED_Put6x8Char
      24   OLED_Put16x16CH
        24   -> OLED_SetPosition
        24   -> OLED_WriteData
      16   OLED_Put6x8Char
        16   -> OLED_SetPosition
        16   -> OLED_WriteData
      32   OLED_Put6x8Str
        32   -> OLED_SetPosition
        32   -> OLED_WriteData
       8   OLED_SetPosition
         8   -> OLED_WriteCmd
      16   OLED_WriteCmd
        16   -> LPLD_GPIO_Output_b
      16   OLED_WriteData
        16   -> LPLD_GPIO_Output_b
       8   SetAddressingMode
         8   -> OLED_WriteCmd
       8   SetChargePump
         8   -> OLED_WriteCmd
      16   SetColumnAddress
        16   -> OLED_WriteCmd
       8   SetCommonConfig
         8   -> OLED_WriteCmd
       8   SetCommonRemap
         8   -> OLED_WriteCmd
       8   SetContrastControl
         8   -> OLED_WriteCmd
       8   SetDisplayClock
         8   -> OLED_WriteCmd
       8   SetDisplayOffset
         8   -> OLED_WriteCmd
       8   SetDisplay_On_Off
         8   -> OLED_WriteCmd
       8   SetEntireDisplay
         8   -> OLED_WriteCmd
       8   SetInverseDisplay
         8   -> OLED_WriteCmd
       8   SetMultiplexRatio
         8   -> OLED_WriteCmd
       8   SetNOP
         8   -> OLED_WriteCmd
      16   SetPageAddress
        16   -> OLED_WriteCmd
       8   SetPrechargePeriod
         8   -> OLED_WriteCmd
       8   SetSegmentRemap
         8   -> OLED_WriteCmd
       8   SetStartColumn
         8   -> OLED_WriteCmd
       8   SetStartLine
         8   -> OLED_WriteCmd
       8   SetStartPage
         8   -> OLED_WriteCmd
       8   SetVCOMH
         8   -> OLED_WriteCmd
       4   getBufPix


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
     640  CH16x16
     552  F6x8
      20  GPIO_InitStructure
      26  OLED_DelayMs
      76  OLED_DispACat
      50  OLED_DispAImg
      50  OLED_DispMyScene
     116  OLED_DisplayImg
     124  OLED_DisplayImgCalc
      60  OLED_Fill
      58  OLED_GPIO_Config
     214  OLED_Init
     104  OLED_PrintCharValue
     276  OLED_PrintFloatValue
     176  OLED_PrintIntValue
     138  OLED_PrintUintValue
     106  OLED_Put16x16CH
      62  OLED_Put6x8Char
     114  OLED_Put6x8Str
      40  OLED_SetPosition
     102  OLED_WriteCmd
     102  OLED_WriteData
     128  OLED_cat
    1024  OLED_img
      20  SetAddressingMode
      22  SetChargePump
      30  SetColumnAddress
      22  SetCommonConfig
      14  SetCommonRemap
      20  SetContrastControl
      20  SetDisplayClock
      20  SetDisplayOffset
      14  SetDisplay_On_Off
      14  SetEntireDisplay
      14  SetInverseDisplay
      20  SetMultiplexRatio
      10  SetNOP
      30  SetPageAddress
      20  SetPrechargePeriod
      14  SetSegmentRemap
      42  SetStartColumn
      14  SetStartLine
      14  SetStartPage
      20  SetVCOMH
     132  getBufPix
      52  oled

 
    20 bytes in section .bss
    52 bytes in section .data
 2 344 bytes in section .rodata
 2 564 bytes in section .text
 
 2 564 bytes of CODE  memory
 2 344 bytes of CONST memory
    72 bytes of DATA  memory

Errors: none
Warnings: none
