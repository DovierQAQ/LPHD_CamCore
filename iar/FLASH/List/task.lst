###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       17/Aug/2018  19:50:43
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\task\task.c
#    Command line =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\task\task.c
#        -D LPLD_K60 -D USE_K60D10 -lCN
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -lB
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -o C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\camera\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\led\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\oled\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\task\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\uart\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\twinCore\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\mpu6050\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\nrf\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\calc\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\UI\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ledArray\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\CPU\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\driver\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\class\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List\task.lst
#    Object file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj\task.o
#
###############################################################################

C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\task\task.c
      1          #include "task.h"
      2          
      3          /****Discription**********************************************/
      4          
      5          /*
      6          	0.PIT定时器控制时序
      7          	1.需先调用task.Init()函数再使用本驱动
      8          	2.task.Start()函数可以开始计时，task.Stop()函数结束计时
      9          		task.timeTest变量存储了计时结果，用来测试某段程序跑的时间
     10          	3.task.Delay(int)函数可以用来毫秒定时
     11          	4.默认使用PIT0和PIT3，可以修改
     12          
     13          	@Time	2017-04-24
     14          	@Author	郭帆
     15          	@Usefor	任务
     16          */
     17          
     18          /****Variables************************************************/
     19          

   \                                 In section .bss, align 4
     20          int delayMs;
   \                     delayMs:
   \   00000000                      DS8 4
     21          
     22          /****Function list********************************************/
     23          
     24          void pit0_isr(void);
     25          void TASK_PIT0_Init(void);
     26          void TASK_PIT3_Start(void);
     27          void TASK_PIT3_Stop(void);
     28          void TASK_Delay(int xms);
     29          
     30          /****Objects**************************************************/
     31          

   \                                 In section .data, align 4
     32          TASK_CLASS task = {&TASK_PIT0_Init, &TASK_Delay, &TASK_PIT3_Start, &TASK_PIT3_Stop, {0}, 0};
   \                     task:
   \   00000000   0x........         DC32 TASK_PIT0_Init, TASK_Delay, TASK_PIT3_Start, TASK_PIT3_Stop, 0
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00000000         DC32 0H
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
     33          
     34          /****Functions************************************************/
     35          

   \                                 In section .text, align 2, keep-with-next
     36          void TASK_PIT0_Init(void)
     37          {
   \                     TASK_PIT0_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     38          	static PIT_InitTypeDef PIT_InitStructure;
     39          	static NVIC_InitTypeDef NVIC_InitStructure;
     40          
     41          	NVIC_InitStructure.NVIC_IRQChannel = PIT0_IRQn;
   \   00000002   0x2044             MOVS     R0,#+68
   \   00000004   0x....             LDR.N    R1,??DataTable3
   \   00000006   0x7008             STRB     R0,[R1, #+0]
     42          	NVIC_InitStructure.NVIC_IRQChannelGroupPriority = NVIC_PriorityGroup_2;
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x....             LDR.N    R1,??DataTable3
   \   0000000C   0x6048             STR      R0,[R1, #+4]
     43          	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable3
   \   00000012   0x6088             STR      R0,[R1, #+8]
     44          	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable3
   \   00000018   0x60C8             STR      R0,[R1, #+12]
     45          
     46          	LPLD_NVIC_Init(NVIC_InitStructure);
   \   0000001A   0x....             LDR.N    R1,??DataTable3
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x2214             MOVS     R2,#+20
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_NVIC_Init
     47          
     48          	PIT_InitStructure.PIT_Pitx = PIT0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR.N    R1,??DataTable3_1
   \   00000030   0x7008             STRB     R0,[R1, #+0]
     49          	PIT_InitStructure.PIT_PeriodMs = 1;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable3_1
   \   00000036   0x6088             STR      R0,[R1, #+8]
     50          	PIT_InitStructure.PIT_Isr = pit0_isr;
   \   00000038   0x.... 0x....      ADR.W    R0,pit0_isr
   \   0000003C   0x....             LDR.N    R1,??DataTable3_1
   \   0000003E   0x6108             STR      R0,[R1, #+16]
     51          
     52          	LPLD_PIT_Init(PIT_InitStructure);
   \   00000040   0x....             LDR.N    R1,??DataTable3_1
   \   00000042   0xB084             SUB      SP,SP,#+16
   \   00000044   0x4668             MOV      R0,SP
   \   00000046   0x2214             MOVS     R2,#+20
   \   00000048   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000004C   0xBC0F             POP      {R0-R3}
   \   0000004E   0x.... 0x....      BL       LPLD_PIT_Init
     53          	LPLD_PIT_EnableIrq(PIT_InitStructure);
   \   00000052   0x....             LDR.N    R1,??DataTable3_1
   \   00000054   0xB084             SUB      SP,SP,#+16
   \   00000056   0x4668             MOV      R0,SP
   \   00000058   0x2214             MOVS     R2,#+20
   \   0000005A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000005E   0xBC0F             POP      {R0-R3}
   \   00000060   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     54          }
   \   00000064   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??PIT_InitStructure:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \                     ??NVIC_InitStructure:
   \   00000000                      DS8 20
     55          

   \                                 In section .text, align 2, keep-with-next
     56          void TASK_Delay(int xms)
     57          {
     58          	delayMs = xms;
   \                     TASK_Delay: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3_2
   \   00000002   0x6008             STR      R0,[R1, #+0]
     59          	while (delayMs);
   \                     ??TASK_Delay_0: (+1)
   \   00000004   0x....             LDR.N    R0,??DataTable3_2
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD1FB             BNE.N    ??TASK_Delay_0
     60          }
   \   0000000C   0x4770             BX       LR               ;; return
     61          

   \                                 In section .text, align 2, keep-with-next
     62          void TASK_PIT3_Start(void)
     63          {
   \                     TASK_PIT3_Start: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     64          	LPLD_PIT_Time_Start(PIT3);
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x.... 0x....      BL       LPLD_PIT_Time_Start
     65          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
     66          

   \                                 In section .text, align 2, keep-with-next
     67          void TASK_PIT3_Stop(void)
     68          {
   \                     TASK_PIT3_Stop: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     69          	int time;
     70          
     71          	time = LPLD_PIT_Time_Get(PIT3);
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x.... 0x....      BL       LPLD_PIT_Time_Get
   \   00000008   0x0004             MOVS     R4,R0
     72          	LPLD_PIT_Close(PIT3);
   \   0000000A   0x2003             MOVS     R0,#+3
   \   0000000C   0x.... 0x....      BL       LPLD_PIT_Close
     73          	time *= (1000000.0 / g_bus_clock);
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       __aeabi_i2d
   \   00000016   0x0004             MOVS     R4,R0
   \   00000018   0x000D             MOVS     R5,R1
   \   0000001A   0x....             LDR.N    R0,??DataTable3_3
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_ui2d
   \   00000022   0x0002             MOVS     R2,R0
   \   00000024   0x000B             MOVS     R3,R1
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x....             LDR.N    R1,??DataTable3_4  ;; 0x412e8480
   \   0000002A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000002E   0x0022             MOVS     R2,R4
   \   00000030   0x002B             MOVS     R3,R5
   \   00000032   0x.... 0x....      BL       __aeabi_dmul
   \   00000036   0x.... 0x....      BL       __aeabi_d2iz
   \   0000003A   0x0004             MOVS     R4,R0
     74          
     75          	task.testTime = time;
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       __aeabi_i2f
   \   00000042   0x....             LDR.N    R1,??DataTable3_5
   \   00000044   0x6248             STR      R0,[R1, #+36]
     76          }
   \   00000046   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     77          
     78          extern int cnt_led;

   \                                 In section .text, align 4, keep-with-next
     79          void pit0_isr(void)
     80          {
   \                     pit0_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     81          	unsigned char i;
     82          
     83          	task.time++;
   \   00000002   0x....             LDR.N    R0,??DataTable3_5
   \   00000004   0x6A01             LDR      R1,[R0, #+32]
   \   00000006   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000000A   0x.... 0x....      BL       __aeabi_fadd
   \   0000000E   0x....             LDR.N    R1,??DataTable3_5
   \   00000010   0x6208             STR      R0,[R1, #+32]
     84          
     85          	for (i = 0; i < NumOfTask; i++)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xE012             B.N      ??pit0_isr_0
     86          		if (task.taskNum[i])
   \                     ??pit0_isr_1: (+1)
   \   00000016   0x....             LDR.N    R1,??DataTable3_5
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000001E   0x6909             LDR      R1,[R1, #+16]
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD00A             BEQ.N    ??pit0_isr_2
     87          			task.taskNum[i]--;
   \   00000024   0x....             LDR.N    R1,??DataTable3_5
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000002C   0x6909             LDR      R1,[R1, #+16]
   \   0000002E   0x1E49             SUBS     R1,R1,#+1
   \   00000030   0x....             LDR.N    R2,??DataTable3_5
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000038   0x6111             STR      R1,[R2, #+16]
   \                     ??pit0_isr_2: (+1)
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \                     ??pit0_isr_0: (+1)
   \   0000003C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003E   0x2804             CMP      R0,#+4
   \   00000040   0xDBE9             BLT.N    ??pit0_isr_1
     88          
     89          	if (delayMs > 0)
   \   00000042   0x....             LDR.N    R0,??DataTable3_2
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x2801             CMP      R0,#+1
   \   00000048   0xDB04             BLT.N    ??pit0_isr_3
     90          		delayMs--;
   \   0000004A   0x....             LDR.N    R0,??DataTable3_2
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x1E40             SUBS     R0,R0,#+1
   \   00000050   0x....             LDR.N    R1,??DataTable3_2
   \   00000052   0x6008             STR      R0,[R1, #+0]
     91          
     92          	if (cnt_led > 50)
   \                     ??pit0_isr_3: (+1)
   \   00000054   0x....             LDR.N    R0,??DataTable3_6
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x2833             CMP      R0,#+51
   \   0000005A   0xDB0E             BLT.N    ??pit0_isr_4
     93          	{
     94          		if (!twinCore.data[8])
   \   0000005C   0x....             LDR.N    R0,??DataTable3_7
   \   0000005E   0xF9B0 0x001C      LDRSH    R0,[R0, #+28]
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD103             BNE.N    ??pit0_isr_5
     95          			ledArray.Go();
   \   00000066   0x....             LDR.N    R0,??DataTable3_8
   \   00000068   0x68C0             LDR      R0,[R0, #+12]
   \   0000006A   0x4780             BLX      R0
   \   0000006C   0xE005             B.N      ??pit0_isr_4
     96          		else
     97          			ledArray.Set(LED0_7 | LED8_15, LEDARRAY_OFF);
   \                     ??pit0_isr_5: (+1)
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000074   0x....             LDR.N    R2,??DataTable3_8
   \   00000076   0x6852             LDR      R2,[R2, #+4]
   \   00000078   0x4790             BLX      R2
     98          	}
     99          }
   \                     ??pit0_isr_4: (+1)
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     ??NVIC_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     ??PIT_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     delayMs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x412E8480         DC32     0x412e8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     task

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     cnt_led

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     twinCore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     ledArray

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   TASK_Delay
      24   TASK_PIT0_Init
         8   -> LPLD_NVIC_Init
         8   -> LPLD_PIT_EnableIrq
         8   -> LPLD_PIT_Init
        24   -> __aeabi_memcpy4
       8   TASK_PIT3_Start
         8   -> LPLD_PIT_Time_Start
      16   TASK_PIT3_Stop
        16   -> LPLD_PIT_Close
        16   -> LPLD_PIT_Time_Get
        16   -> __aeabi_d2iz
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_i2d
        16   -> __aeabi_i2f
        16   -> __aeabi_ui2d
       8   pit0_isr
         8   -- Indirect call
         8   -> __aeabi_fadd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
      20  NVIC_InitStructure
      20  PIT_InitStructure
      14  TASK_Delay
     102  TASK_PIT0_Init
      10  TASK_PIT3_Start
      72  TASK_PIT3_Stop
       4  delayMs
     124  pit0_isr
      40  task

 
  44 bytes in section .bss
  40 bytes in section .data
 358 bytes in section .text
 
 358 bytes of CODE memory
  84 bytes of DATA memory

Errors: none
Warnings: none
