###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       04/Aug/2018  19:58:28
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\UI\UI.c
#    Command line =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\UI\UI.c -D
#        LPLD_K60 -D USE_K60D10 -lCN
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -lB
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List
#        -o C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\camera\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\led\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\oled\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\task\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\uart\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\twinCore\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\mpu6050\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\nrf\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\calc\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\UI\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\app\ledArray\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\CPU\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\common\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\driver\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\..\lib\USB\class\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\List\UI.lst
#    Object file  =  
#        C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\iar\FLASH\Obj\UI.o
#
###############################################################################

C:\Users\ShowD\Desktop\LPHD\LPHD_camCore\LPHD_camCore\app\UI\UI.c
      1          #include "UI.h"
      2          
      3          /****Discription**********************************************/
      4          
      5          /*
      6          	0.针对副单片机编写的UI，可能移植性不太好，不做过多的说明了
      7          
      8          	@Time	2018-05-08
      9          	@Author	郭帆
     10          	@Usefor	UI
     11          */
     12          
     13          /****Definitions**********************************************/
     14          
     15          #define UI_CURSOR	('z' + 1)
     16          
     17          #define UI_MENU		0
     18          
     19          /****Functions************************************************/
     20          
     21          void UI_SetLevel(int level);
     22          void UI_SetCursor(int level, int num);
     23          void UI_Update(void);
     24          void UI_ProcessKey(void);
     25          
     26          /****Variables************************************************/
     27          

   \                                 In section .bss, align 4
     28          static int flag_static = 0, flag_cursor = 0;
   \                     flag_static:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     flag_cursor:
   \   00000000                      DS8 4
     29          
     30          /****Objects**************************************************/
     31          

   \                                 In section .data, align 4
     32          UI_CLASS ui =
   \                     ui:
   \   00000000   0x........         DC32 UI_SetLevel, UI_SetCursor, UI_Update, 0H
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     33          {
     34          	&UI_SetLevel,
     35          	&UI_SetCursor,
     36          	&UI_Update,
     37          
     38          	0
     39          };
     40          
     41          /****Functions************************************************/
     42          

   \                                 In section .text, align 2, keep-with-next
     43          void UI_SetLevel(int level)
     44          {
     45          	ui.level = level;
   \                     UI_SetLevel: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3
   \   00000002   0x6188             STR      R0,[R1, #+24]
     46          	flag_static = 1;
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x....             LDR.N    R1,??DataTable3_1
   \   00000008   0x6008             STR      R0,[R1, #+0]
     47          }
   \   0000000A   0x4770             BX       LR               ;; return
     48          

   \                                 In section .text, align 2, keep-with-next
     49          void UI_SetCursor(int level, int num)
     50          {
     51          	ui.cursor[level] += num;
   \                     UI_SetCursor: (+1)
   \   00000000   0x....             LDR.N    R2,??DataTable3
   \   00000002   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000006   0x69D2             LDR      R2,[R2, #+28]
   \   00000008   0x1889             ADDS     R1,R1,R2
   \   0000000A   0x....             LDR.N    R2,??DataTable3
   \   0000000C   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000010   0x61D1             STR      R1,[R2, #+28]
     52          
     53          	if (ui.cursor[level] > 7)
   \   00000012   0x....             LDR.N    R1,??DataTable3
   \   00000014   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000018   0x69C9             LDR      R1,[R1, #+28]
   \   0000001A   0x2908             CMP      R1,#+8
   \   0000001C   0xDB05             BLT.N    ??UI_SetCursor_0
     54          		ui.cursor[level] = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR.N    R2,??DataTable3
   \   00000022   0xEB12 0x0080      ADDS     R0,R2,R0, LSL #+2
   \   00000026   0x61C1             STR      R1,[R0, #+28]
   \   00000028   0xE00A             B.N      ??UI_SetCursor_1
     55          	else if (ui.cursor[level] < 0)
   \                     ??UI_SetCursor_0: (+1)
   \   0000002A   0x....             LDR.N    R1,??DataTable3
   \   0000002C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000030   0x69C9             LDR      R1,[R1, #+28]
   \   00000032   0x2900             CMP      R1,#+0
   \   00000034   0xD504             BPL.N    ??UI_SetCursor_1
     56          		ui.cursor[level] = 7;
   \   00000036   0x2107             MOVS     R1,#+7
   \   00000038   0x....             LDR.N    R2,??DataTable3
   \   0000003A   0xEB12 0x0080      ADDS     R0,R2,R0, LSL #+2
   \   0000003E   0x61C1             STR      R1,[R0, #+28]
     57          
     58          	flag_cursor = 1;
   \                     ??UI_SetCursor_1: (+1)
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x....             LDR.N    R1,??DataTable3_2
   \   00000044   0x6008             STR      R0,[R1, #+0]
     59          }
   \   00000046   0x4770             BX       LR               ;; return
     60          

   \                                 In section .text, align 2, keep-with-next
     61          void UI_Update(void)
     62          {
   \                     UI_Update: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     63          	int i;
     64          
     65          	if (flag_static)
   \   00000002   0x....             LDR.N    R0,??DataTable3_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD011             BEQ.N    ??UI_Update_0
     66          	{
     67          		for (i = 0; i < 8; i++)
   \   0000000A   0x2400             MOVS     R4,#+0
   \   0000000C   0xE00A             B.N      ??UI_Update_1
     68          			oled.Printf(i, 0, UI_Menu[i]);
   \                     ??UI_Update_2: (+1)
   \   0000000E   0x....             LDR.N    R0,??DataTable3_3
   \   00000010   0x2116             MOVS     R1,#+22
   \   00000012   0xFB01 0x0204      MLA      R2,R1,R4,R0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x....             LDR.N    R3,??DataTable3_4
   \   0000001E   0x689B             LDR      R3,[R3, #+8]
   \   00000020   0x4798             BLX      R3
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??UI_Update_1: (+1)
   \   00000024   0x2C08             CMP      R4,#+8
   \   00000026   0xDBF2             BLT.N    ??UI_Update_2
     69          
     70          		flag_static = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x....             LDR.N    R1,??DataTable3_1
   \   0000002C   0x6008             STR      R0,[R1, #+0]
     71          	}
     72          
     73          	if (flag_cursor)
   \                     ??UI_Update_0: (+1)
   \   0000002E   0x....             LDR.N    R0,??DataTable3_2
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD00B             BEQ.N    ??UI_Update_3
     74          		oled.Putchar(ui.cursor[ui.level], 6, UI_CURSOR);
   \   00000036   0x227B             MOVS     R2,#+123
   \   00000038   0x2106             MOVS     R1,#+6
   \   0000003A   0x....             LDR.N    R0,??DataTable3
   \   0000003C   0x....             LDR.N    R3,??DataTable3
   \   0000003E   0x699B             LDR      R3,[R3, #+24]
   \   00000040   0xEB10 0x0083      ADDS     R0,R0,R3, LSL #+2
   \   00000044   0x69C0             LDR      R0,[R0, #+28]
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x....             LDR.N    R3,??DataTable3_4
   \   0000004A   0x685B             LDR      R3,[R3, #+4]
   \   0000004C   0x4798             BLX      R3
     75          }
   \                     ??UI_Update_3: (+1)
   \   0000004E   0xBD10             POP      {R4,PC}          ;; return
     76          

   \                                 In section .text, align 2, keep-with-next
     77          void UI_ProcessKey(void)
     78          {
   \                     UI_ProcessKey: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     79          	if (ui.keyNow)
   \   00000002   0x....             LDR.N    R0,??DataTable3
   \   00000004   0x6900             LDR      R0,[R0, #+16]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD022             BEQ.N    ??UI_ProcessKey_0
     80          	{
     81          		switch (ui.keyNow)
   \   0000000A   0x....             LDR.N    R0,??DataTable3
   \   0000000C   0x6900             LDR      R0,[R0, #+16]
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xD009             BEQ.N    ??UI_ProcessKey_1
   \   00000012   0xD31A             BCC.N    ??UI_ProcessKey_2
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD015             BEQ.N    ??UI_ProcessKey_3
   \   00000018   0xD30D             BCC.N    ??UI_ProcessKey_4
   \   0000001A   0x2805             CMP      R0,#+5
   \   0000001C   0xD014             BEQ.N    ??UI_ProcessKey_5
   \   0000001E   0xD312             BCC.N    ??UI_ProcessKey_6
   \   00000020   0x2806             CMP      R0,#+6
   \   00000022   0xD012             BEQ.N    ??UI_ProcessKey_7
   \   00000024   0xE011             B.N      ??UI_ProcessKey_2
     82          		{
     83          			/*-------------------------------------------------------*/
     84          		case KEY_UP:
     85          			ui.SetCursor(ui.level, -1);
   \                     ??UI_ProcessKey_1: (+1)
   \   00000026   0xF05F 0x31FF      MOVS     R1,#-1
   \   0000002A   0x....             LDR.N    R0,??DataTable3
   \   0000002C   0x6980             LDR      R0,[R0, #+24]
   \   0000002E   0x....             LDR.N    R2,??DataTable3
   \   00000030   0x6852             LDR      R2,[R2, #+4]
   \   00000032   0x4790             BLX      R2
     86          			break;
   \   00000034   0xE009             B.N      ??UI_ProcessKey_2
     87          
     88          			/*-------------------------------------------------------*/
     89          		case KEY_DOWN:
     90          			ui.SetCursor(ui.level, 1);
   \                     ??UI_ProcessKey_4: (+1)
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0x....             LDR.N    R0,??DataTable3
   \   0000003A   0x6980             LDR      R0,[R0, #+24]
   \   0000003C   0x....             LDR.N    R2,??DataTable3
   \   0000003E   0x6852             LDR      R2,[R2, #+4]
   \   00000040   0x4790             BLX      R2
     91          			break;
   \   00000042   0xE002             B.N      ??UI_ProcessKey_2
     92          
     93          			/*-------------------------------------------------------*/
     94          		case KEY_RIGHT:
     95          			break;
   \                     ??UI_ProcessKey_3: (+1)
   \   00000044   0xE001             B.N      ??UI_ProcessKey_2
     96          
     97          			/*-------------------------------------------------------*/
     98          		case KEY_LEFT:
     99          			break;
   \                     ??UI_ProcessKey_6: (+1)
   \   00000046   0xE000             B.N      ??UI_ProcessKey_2
    100          
    101          			/*-------------------------------------------------------*/
    102          		case KEY_MAKE:
    103          			break;
   \                     ??UI_ProcessKey_5: (+1)
   \   00000048   0xE7FF             B.N      ??UI_ProcessKey_2
    104          
    105          			/*-------------------------------------------------------*/
    106          		case KEY_BACK:
    107          			break;
    108          		}
    109          
    110          		ui.keyNow = KEY_NONE;
   \                     ??UI_ProcessKey_7: (+1)
   \                     ??UI_ProcessKey_2: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x....             LDR.N    R1,??DataTable3
   \   0000004E   0x6108             STR      R0,[R1, #+16]
    111          	}
    112          }
   \                     ??UI_ProcessKey_0: (+1)
   \   00000050   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     ui

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     flag_static

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     flag_cursor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     UI_Menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     oled

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   UI_ProcessKey
         8   -- Indirect call
       0   UI_SetCursor
       0   UI_SetLevel
       8   UI_Update
         8   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
      82  UI_ProcessKey
      72  UI_SetCursor
      12  UI_SetLevel
      80  UI_Update
       4  flag_cursor
       4  flag_static
      68  ui

 
   8 bytes in section .bss
  68 bytes in section .data
 266 bytes in section .text
 
 266 bytes of CODE memory
  76 bytes of DATA memory

Errors: none
Warnings: none
